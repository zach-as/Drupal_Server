<?php
/**
 * @file
 * Functions to support theming in the Base+ theme.
 */

use Drupal\Core\Theme\ThemeSettings;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\Component\Utility\Html;
use Drupal\Core\Url;
use Drupal\views\Views;
use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeManagerInterface;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function basecore_preprocess_html(&$variables) {

  $moduleHandler = \Drupal::service('module_handler');
  // (PWA) Attach manifest
  if (theme_get_setting('enable_pwa')) {
    // unset manifest attached from other modules/projects (e.g onesignal)
    if (isset($variables['page']['#attached']['html_head_link']) && is_array($variables['page']['#attached']['html_head_link'])) {
      foreach ($variables['page']['#attached']['html_head_link'] as $key => $item) {
        if ((reset($item)['rel'] && reset($item)['rel'] == 'manifest')) {
          unset($variables['page']['#attached']['html_head_link'][$key]);
        }
      }
    }
    // Create link tag for our manifest.json and attach
    $base_path = \Drupal::service('file_url_generator')->generateAbsoluteString('public://') . 'pwa/';
    $relative_path = \Drupal::service('file_url_generator')->transformRelative($base_path);
    $manifest = [
      [
        'rel' => "manifest",
        'href' => $relative_path . 'manifest.json',
      ],
      TRUE,
    ];
    $variables['page']['#attached']['html_head_link'][] = $manifest;
    // Create link tag for apple-touch-icon and attach
    $apple_touch_icon = [
      [
        'rel' => "apple-touch-icon",
        'href' => $relative_path . 'images/launcher-icon-180.png',
      ],
      TRUE,
    ];
    $variables['page']['#attached']['html_head_link'][] = $apple_touch_icon;
    // Attach service worker JS located in drupal root
    $site_base_url = $GLOBALS['base_url'];
    if ($moduleHandler->moduleExists('onesignal')) {
      $sw_base_path = \Drupal::service('file_url_generator')->generateString($site_base_url.'/pwa-onesignal-service-worker.js');
      $variables['page']['#attached']['drupalSettings']['basecore']['serviceWorkerPath'] = $sw_base_path;
    } else {
      $sw_base_path = \Drupal::service('file_url_generator')->generateString($site_base_url.'/pwa-service-worker.js');
      $variables['page']['#attached']['drupalSettings']['basecore']['serviceWorkerPath'] = $sw_base_path;
    }
  }
  // EOF: Attach manifest (PWA-END)

  $bootstrap_remote_type = theme_get_setting('bootstrap_remote_type');
  if ($bootstrap_remote_type == 'local') {
    $variables['#attached']['library'][] = 'basecore/bootstrap';
  } else {
    $variables['#attached']['library'][] = 'basecore/bootstrap-cdn';
  }

  if (!($moduleHandler->moduleExists('fontawesome'))) {
    $variables['#attached']['library'][] = 'basecore/fontawesome';
  }

  // Do not load fontawesome-css if the FA module exists, and it is
  // loading the FA library and it is using the webfonts method needed
  // by menus and other theme elements.
  $load_fontawesome_css = TRUE;
  if ($moduleHandler->moduleExists('fontawesome')) {
    $fontawesome_config = \Drupal::config('fontawesome.settings');
    $fontawesome_method = $fontawesome_config->get('method');
    $fontawesome_load_assets = $fontawesome_config->get('load_assets');

    if ($fontawesome_method === 'webfonts' && $fontawesome_load_assets === TRUE) {
      $load_fontawesome_css = FALSE;
    }
  }

  if ($load_fontawesome_css === TRUE) {
    $variables['#attached']['library'][] = 'basecore/fontawesome-css';
  }

  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'layout-one-sidebar';
    $variables['attributes']['class'][] = 'layout-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  $color_scheme_library = 'basecore/color-'.theme_get_setting('color_scheme');
  $variables['#attached']['library'][] = $color_scheme_library;
  $variables['attributes']['class'][] = 'mt-color-scheme-' . theme_get_setting('color_scheme');

  $background_pattern = theme_get_setting('background_pattern');
  if ($background_pattern != "none") {
    $variables['#attached']['library'][] = 'basecore/patterns';
    $variables['attributes']['class'][] = 'mt-pattern-' . $background_pattern;
    $variables['attributes']['class'][] = 'mt-patterns-enabled';
  } else {
    $variables['attributes']['class'][] = 'mt-patterns-disabled';
  }

  $global_corner_style = theme_get_setting('global_corner_style');
  $variables['attributes']['class'][] = $global_corner_style;

  $button_corner_style = theme_get_setting('button_corner_style');
  $variables['attributes']['class'][] = $button_corner_style;

  $form_corner_style = theme_get_setting('form_corner_style');
  $variables['attributes']['class'][] = $form_corner_style;

  $image_corner_style = theme_get_setting('image_corner_style');
  $variables['attributes']['class'][] = $image_corner_style;

  $menu_corner_style = theme_get_setting('menu_corner_style');
  $variables['attributes']['class'][] = $menu_corner_style;

  $custom_elements_corner_style = theme_get_setting('custom_elements_corner_style');
  $variables['attributes']['class'][] = $custom_elements_corner_style;

  $links_style = theme_get_setting('links_style');
  $variables['attributes']['class'][] = $links_style;

  // Add class for layout mode on body tag.
  $variables['attributes']['class'][] = theme_get_setting('layout_mode');

  $headings_font_family = theme_get_setting('headings_font_family');
  $headings_wide_spacing = theme_get_setting('headings_wide_spacing');
  $paragraph_font_family = theme_get_setting('paragraph_font_family');
  $paragraph_responsive_typography = theme_get_setting('paragraph_responsive_typography');
  $sitename_font_family = theme_get_setting('sitename_font_family');
  $slogan_font_family = theme_get_setting('slogan_font_family');

  $variables['attributes']['class'][] = $headings_font_family;
  $variables['attributes']['class'][] = $paragraph_font_family;
  $variables['attributes']['class'][] = $sitename_font_family;
  $variables['attributes']['class'][] = $slogan_font_family;
  if ($headings_wide_spacing) {
    $variables['attributes']['class'][] = "headings-wide-spacing-enabled";
  }
  if ($paragraph_responsive_typography) {
    $variables['attributes']['class'][] = "paragraph-responsive-typography-enabled";
  }

  //Get the IDs for each font family
  $headings_font_id = substr($headings_font_family, -2);
  $paragraph_font_id = substr($paragraph_font_family, -2);
  $sitename_font_id = substr($sitename_font_family, -2);
  $slogan_font_id = substr($slogan_font_family, -2);

  //Generate the library strings
  $headings_font_library = 'basecore/fonts-id-'.$headings_font_id;
  $paragraph_font_library = 'basecore/fonts-id-'.$paragraph_font_id;
  $sitename_font_library = 'basecore/fonts-id-'.$sitename_font_id;
  $slogan_font_library = 'basecore/fonts-id-'.$slogan_font_id;

  //Font families with the following IDs are OS specific and should not load an external font
  //yf: @font-your-face, yf=fyf
  //13: Georgia
  //21: Helvetica Neue
  //30: Times
  //50: Os Default
  $no_library_array = array('yf','13','21','30','50');

  //Directly Load the font family libraries if the IDs are not in the $no_library_array
  if (!in_array($headings_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $headings_font_library;
  }
  if (!in_array($paragraph_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $paragraph_font_library;
  }
  if (!in_array($sitename_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $sitename_font_library;
  }
  if (!in_array($slogan_font_id, $no_library_array)) {
    $variables['#attached']['library'][] = $slogan_font_library;
  }

  $variables['#attached']['library'][] = 'basecore/fonts-sourcecodepro';

  // Blockquote symbol
  $variables['#attached']['library'][] = 'basecore/fonts-pt-serif';

  // Load libraries for Animations
  $animations_state = theme_get_setting('animations_state');
  if ($animations_state) {
    $variables['#attached']['library'][] = 'basecore/animate-global';
    $variables['#attached']['library'][] = 'basecore/waypoints-animations-init';
  }

  //Load fixed-header library
  $fixed_header = theme_get_setting('fixed_header');
  if ($fixed_header) {
    $fixed_header_behavior = theme_get_setting('fixed_header_behavior');
    if (!empty($fixed_header_behavior)) {
      $variables['attributes']['class'][] = $fixed_header_behavior;
    }
    $variables['attributes']['class'][] = 'fixed-header-enabled';
    $variables['#attached']['library'][] = 'basecore/fixed-header';
  }

  //Load page-container-border
  $page_container_border = theme_get_setting('page_container_border');
  if ($page_container_border) {
    $variables['attributes']['class'][] = 'page-container-border-enabled';
  }

  // Add class for side of slideout to body.
  $variables['attributes']['class'][] = 'slideout-side-'.theme_get_setting('slideout_side');

  //Load transparent-header library
  $transparent_header_state = theme_get_setting('transparent_header_state');
  if ($transparent_header_state) {
    $variables['attributes']['class'][] = 'transparent-header-active';
  }

  //Inverted header state
  $inverted_header_state = theme_get_setting('inverted_header_state');
  if ($inverted_header_state) {
    $variables['attributes']['class'][] = "inverted-header-enabled";
    $variables['#attached']['library'][] = 'basecore/inverted-header';
  }

  // Add page-node-id class to body
  $node = _safe_load_current_node();
  $view_id = \Drupal::routeMatch()->getParameter('view_id');
  $display_id = \Drupal::routeMatch()->getParameter('display_id');
  if (!empty($node) && $node instanceof \Drupal\node\NodeInterface) {
    $variables['attributes']['class'][] = 'page-node-' . $node->id();
  } elseif (!empty($view_id)) {
    $pieces = explode("_", $view_id);
    $variables['attributes']['class'][] = Html::cleanCssIdentifier('page-view-id-' . $view_id);
    if (!empty($pieces[1])) {
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('page-view-type-' . $pieces[1]);
    }
    if (!empty($display_id)) {
      $variables['attributes']['class'][] = Html::cleanCssIdentifier('page-view-page-id-' . $view_id . '-' . $display_id);
    }
  }

  // Header background
  $header_background_image_state = theme_get_setting('header_background_image_state');
  if ($header_background_image_state) {
    $variables['attributes']['class'][] = "header-background-image-enabled";
    $variables['#attached']['library'][] = 'basecore/header-background-image';
  }

  $slideout_mobile_menu_display = theme_get_setting('slideout_mobile_menu_display');
  if ($slideout_mobile_menu_display) {
    $variables['attributes']['class'][] = "slideout-mobile-menu-enabled";
  }

}

function _safe_load_current_node() {
  $node = \Drupal::request()->attributes->get('node');
  return _safe_load_node($node);
}

function _safe_load_node($node){
  if ($node instanceof \Drupal\node\Entity\Node) {
    return $node;
  }
  if (is_scalar($node)){
    return Drupal\node\Entity\Node::load($node);
  }
  return null;
}

/**
 * Implements hook_preprocess_HOOK() for status messages.
 */
function basecore_preprocess_status_messages(&$variables) {
  $variables['attributes']['class'][] = "mt-style-custom-all";
}

function basecore_preprocess_breadcrumb(&$variables){
  $variables['mt_setting']['breadcrumb_separator'] = theme_get_setting('breadcrumb_separator');
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function basecore_preprocess_page_title(&$variables) {
  // Since the title and the shortcut link are both block level elements,
  // positioning them next to each other is much simpler with a wrapper div.
  if (!empty($variables['title_suffix']['add_or_remove_shortcut']) && $variables['title']) {
    // Add a wrapper div using the title_prefix and title_suffix render
    // elements.
    $variables['title_prefix']['shortcut_wrapper'] = array(
      '#markup' => '<div class="shortcut-wrapper clearfix">',
      '#weight' => 100,
    );
    $variables['title_suffix']['shortcut_wrapper'] = array(
      '#markup' => '</div>',
      '#weight' => -99,
    );
    // Make sure the shortcut link is the first item in title_suffix.
    $variables['title_suffix']['add_or_remove_shortcut']['#weight'] = -100;
  }
}

function basecore_preprocess_block__page_title_block(&$variables) {
  $variables['mt_views_header'] = "";
  $variables['mt_view_header_enabled'] = "";
  $mt_views_id = \Drupal::request()->attributes->get('view_id');
  $mt_views_display_id = \Drupal::request()->attributes->get('display_id');
  if (!empty($mt_views_id) && !empty($mt_views_display_id)) {
    $mt_args = [];
    $mt_view = Views::getView($mt_views_id);
    if (is_object($mt_view)) {
      $mt_view->setArguments($mt_args);
      $mt_view->setDisplay($mt_views_display_id);
      $mt_view->preExecute();
      $mt_view->execute();
      $mt_view_content = $mt_view->buildRenderable($mt_views_display_id, $mt_args);
    }
    if (!empty($mt_view_content['#view']->header)) {
      foreach ($mt_view_content['#view']->header as $key => $item) {

        if (!empty($item->render()['#type']) && $item->render()['#type'] == "processed_text") {
          $mt_views_header = $item->render()['#text'];
          if (strpos($mt_views_header, 'mt-view-header') !== false) {
            $variables['mt_view_headers'][] = $item->render();
            $variables['mt_view_header_enabled'] = 'mt-view-header-enabled';
          }
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for block--mailchimp-signup-subscribe-block--mt-mailchimp-signup templates.
 */

function basecore_preprocess_block__mailchimp_signup_subscribe_block__mt_mailchimp_signup(&$variables) {
  $variables['#attached']['library'][] = 'basecore/mailchimp-signup-form';
}

function basecore_preprocess_block__views_block(&$variables) {
  $variables['mt_views_header'] = "";
  $variables['mt_view_header_enabled'] = "";
  if (isset($variables['content']['#view_id'])) {
  $mt_views_id = $variables['content']['#view_id'];
  }
  if (isset($variables['content']['#display_id'])) {
  $mt_views_display_id = $variables['content']['#display_id'];
  }
  if (!empty($mt_views_id) && !empty($mt_views_display_id)) {
    $mt_args = [];
    $mt_view = Views::getView($mt_views_id);
    if (is_object($mt_view)) {
      $mt_view->setArguments($mt_args);
      $mt_view->setDisplay($mt_views_display_id);
      $mt_view->preExecute();
      $mt_view->execute();
      $mt_view_content = $mt_view->buildRenderable($mt_views_display_id, $mt_args);
    }
    if (!empty($mt_view_content['#view']->header)) {
      foreach ($mt_view_content['#view']->header as $key => $item) {

        if (!empty($item->render()['#type']) && $item->render()['#type'] == "processed_text") {
          $mt_views_header = $item->render()['#text'];
          if (strpos($mt_views_header, 'mt-view-header') !== false) {
            $variables['mt_view_headers'][] = $item->render();
            $variables['mt_view_header_enabled'] = 'mt-view-header-enabled';
          }
        }
      }
    }
  }
}

function basecore_preprocess_page(&$variables) {
  if (isset($variables['node'])) {
    $variables['node'] = _safe_load_node($variables['node']);
  }
  $moduleHandler = \Drupal::service('module_handler');
  $route_provider = \Drupal::service('router.route_provider');

  // Find the default search page route.
  if ($moduleHandler->moduleExists('search')) {
    $search_page_repository = \Drupal::service('search.search_page_repository');
    $default_search_page_id = $search_page_repository->getDefaultSearchPage();
    $default_search_route = 'search.view_' . $default_search_page_id;
  }

  if ($moduleHandler->moduleExists('search') && (count($route_provider->getRoutesByNames([$default_search_route])) === 1) ) {
    $variables['mobile_search_enabled'] = true;
    $variables['default_search_route'] = $default_search_route;
  } else {
    $variables['mobile_search_enabled'] = false;
  }

  $slideout = $variables['page']['slideout'];
  $sidebar_first = $variables['page']['sidebar_first'];
  $sidebar_second = $variables['page']['sidebar_second'];
  $content_bottom_first = $variables['page']['content_bottom_first'];
  $content_bottom_second = $variables['page']['content_bottom_second'];
  $hero_first = $variables['page']['hero_first'];
  $hero_second = $variables['page']['hero_second'];
  $hero_third = $variables['page']['hero_third'];
  $footer_top_first = $variables['page']['footer_top_first'];
  $footer_top_second = $variables['page']['footer_top_second'];
  $footer_first = $variables['page']['footer_first'];
  $footer_second = $variables['page']['footer_second'];
  $footer_third = $variables['page']['footer_third'];
  $footer_fourth = $variables['page']['footer_fourth'];
  $footer_fifth = $variables['page']['footer_fifth'];
  $footer_bottom_first = $variables['page']['footer_bottom_first'];
  $footer_bottom_second = $variables['page']['footer_bottom_second'];
  $footer_bottom_third = $variables['page']['footer_bottom_third'];
  $footer_bottom_fourth = $variables['page']['footer_bottom_fourth'];
  $subfooter_top_first = $variables['page']['sub_footer_top_first'];
  $subfooter_top_second = $variables['page']['sub_footer_top_second'];
  $subfooter_top_third = $variables['page']['sub_footer_top_third'];
  $subfooter_second = $variables['page']['footer'];
  $subfooter_first = $variables['page']['sub_footer_first'];
  $mobile_menu_widget = $variables['page']['mobile_menu_widget'];

  // Attach library to slideout region
  if ($slideout) {
    $variables['#attached']['library'][] = 'basecore/slideout-init';
  }

  // Insert variables into the page template.

  // Header Top Highlighted
  $variables['header_top_highlighted_layout_container'] = theme_get_setting('header_top_highlighted_layout_container');

  $header_top_highlighted_first = $variables['page']['header_top_highlighted_first'];
  $header_top_highlighted_second = $variables['page']['header_top_highlighted_second'];

  if($header_top_highlighted_first && $header_top_highlighted_second) {
    $variables['header_top_highlighted_first_grid_class'] = 'col-6';
    $variables['header_top_highlighted_second_grid_class'] = 'col-6';
  } elseif ($header_top_highlighted_first || $header_top_highlighted_second) {
    $variables['header_top_highlighted_first_grid_class'] = 'col-12';
    $variables['header_top_highlighted_second_grid_class'] = 'col-12';
  }

  // Header Top
  $variables['header_top_layout_container'] = theme_get_setting('header_top_layout_container');

  $header_top_first = $variables['page']['header_top_first'];
  $header_top_second = $variables['page']['header_top_second'];

  if($header_top_first && $header_top_second) {
    $variables['header_top_first_grid_class'] = 'col-md-6 col-lg-4';
    $variables['header_top_second_grid_class'] = 'col-md-6 col-lg-8';
  } elseif ($header_top_first || $header_top_second) {
    $variables['header_top_first_grid_class'] = 'col-12';
    $variables['header_top_second_grid_class'] = 'col-12';
  }

  // Header
  $variables['header_layout_container'] = theme_get_setting('header_layout_container');
  $header_first = $variables['page']['header_first'];
  $header = $variables['page']['header'];
  $header_third = $variables['page']['header_third'];
  $header_horizontal_paddings = theme_get_setting('header_horizontal_paddings');
  if (!$header_horizontal_paddings && ($variables['header_layout_container'] == 'container-fluid')) {
    $variables['header_horizontal_paddings'] = 'pl-xl-5 pe-xl-5';
  } elseif ($header_horizontal_paddings && ($variables['header_layout_container'] == 'container-fluid')) {
    $variables['header_horizontal_paddings'] = 'pl-xl-3 pe-xl-3';
  } else {
    $variables['header_horizontal_paddings'] = '';
  }

  if (($header_first && !$header && $header_third) || (!$header_first && $header && $header_third)) {
    $variables['header_layout_columns_class'] = 'two-columns';
    if ($variables['header_layout_container'] == 'container-fluid') {
      $variables['header_first_grid_class'] = 'col-lg-8 col-xl-9';
      $variables['header_second_grid_class'] = 'col-lg-8 col-xl-9';
      $variables['header_third_grid_class'] = 'col-lg-4 col-xl-3';
    } else {
      $variables['header_first_grid_class'] = 'col-lg-8';
      $variables['header_second_grid_class'] = 'col-lg-8';
      $variables['header_third_grid_class'] = 'col-lg-4';
    }
  } else if ($header_first && $header) {
    if ($header_third) {
      $variables['header_layout_columns_class'] = 'three-columns';
      $variables['header_first_grid_class'] = 'col-xl-4 col-lg-5 col-md-12 order-lg-1';
      $variables['header_second_grid_class'] = 'col-xl-6 col-lg-12 col-md-10 col-12 order-lg-3 order-xl-2';
      $variables['header_third_grid_class'] = 'col-xl-2 col-lg-7 col-md-2 order-lg-2 order-xl-3';
    } else {
      $variables['header_layout_columns_class'] = 'two-columns';
      $variables['header_first_grid_class'] = 'col-lg-3';
      $variables['header_second_grid_class'] = 'col-lg-9';
    }
  } else {
    $variables['header_layout_columns_class'] = 'one-column';
    $variables['header_first_grid_class'] = 'col-12';
    $variables['header_second_grid_class'] = 'col-12';
    $variables['header_third_grid_class'] = 'col-12';
  }

  if ($variables['header_layout_container'] == 'container-fluid') {
    $variables['header_layout_container_class'] = 'full-width';
  } else {
    $variables['header_layout_container_class'] = 'fixed-width';
  }

  // Hero Top
  $variables['hero_top_layout_container'] = theme_get_setting('hero_top_layout_container');

  // Hero
  $variables['hero_layout_container'] = theme_get_setting('hero_layout_container');

  if ($hero_first && $hero_second && $hero_third) {
    $variables['hero_first_grid_class'] = 'col-md-4 col-xl-3 order-3 order-md-2 order-xl-1';
    $variables['hero_second_grid_class'] = 'col-lg-12 col-xl-5 order-1 order-lg-1 order-xl-2';
    $variables['hero_third_grid_class'] = 'col-md-8 col-xl-4 order-2 order-md-3 order-xl-3';
  } elseif ((!$hero_first && $hero_second && $hero_third) || ($hero_first && !$hero_second && $hero_third)) {
    $variables['hero_first_grid_class'] = 'col-md-6';
    $variables['hero_second_grid_class'] = 'col-md-6';
    $variables['hero_third_grid_class'] = 'col-md-6';
  } elseif ($hero_first && $hero_second && !$hero_third) {
    $variables['hero_first_grid_class'] = 'col-md-8';
    $variables['hero_second_grid_class'] = 'col-md-4';
  } else {
    $variables['hero_first_grid_class'] = 'col-12';
    $variables['hero_second_grid_class'] = 'col-12';
    $variables['hero_third_grid_class'] = 'col-12';
  }

  // Banner
  $variables['banner_layout_container'] = theme_get_setting('banner_layout_container');

  // Content Top
  $variables['content_top_layout_container'] = theme_get_setting('content_top_layout_container');

  // Content Top Highlighted
  $variables['content_top_highlighted_layout_container'] = theme_get_setting('content_top_highlighted_layout_container');

  // Main Content Layout
  $variables['main_content_layout_container'] = theme_get_setting('main_content_layout_container');


  if ($variables['main_content_layout_container'] == "container-fluid") {
    $variables['main_content_paddings'] = "pr-xl-5 ps-xl-5";
    $variables['sidebar_paddings'] = "pr-xl-5 ps-xl-5";
  } else {
    $variables['main_content_paddings'] = "";
    $variables['sidebar_paddings'] = "";
  }

  $narrow_view_ids = [
    'frontpage',
    'taxonomy_term',
    'mt_posts_list',
    'mt_albums_list',
    'mt_services_list',
    'mt_showcases_list',
    'mt_products_list',
  ];

  $narrow_content_types = [
    'article',
  ];

  $current_path = \Drupal::service('path.current')->getPath();
  if (!isset($variables['node'])){
    $view_id = \Drupal::routeMatch()->getParameter('view_id');
  }
  if($sidebar_first && $sidebar_second) {
    $variables['main_grid_class'] = 'col-lg-6 order-2';
    $variables['sidebar_first_grid_class'] = 'col-lg-3 order-1';
    $variables['sidebar_second_grid_class'] = 'col-lg-3 order-3';
  } elseif ($sidebar_first && !$sidebar_second) {
    $variables['main_grid_class'] = 'col-lg-8 order-2';
    $variables['sidebar_first_grid_class'] = 'col-lg-4 order-1';
    $variables['sidebar_second_grid_class'] = '';
  } elseif (!$sidebar_first && $sidebar_second) {
    $variables['main_grid_class'] = 'col-lg-8';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = 'col-lg-4';
  } elseif ((!$sidebar_first && !$sidebar_second) && (isset($variables['node']) && !empty($variables['node']) && $variables['node'] instanceof \Drupal\node\NodeInterface) && (in_array($variables['node']->getType(), $narrow_content_types))) {
    $variables['main_grid_class'] = 'col-12 col-xl-10 ms-xl-auto me-xl-auto';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = '';
  } elseif ((!$sidebar_first && !$sidebar_second) && isset($view_id) && (in_array($view_id, $narrow_view_ids))) {
    $variables['main_grid_class'] = 'col-12 col-xl-8 ms-xl-auto me-xl-auto';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = '';
  } else {
    $variables['main_grid_class'] = 'col-12';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = '';
  }

  if (($sidebar_first && !$sidebar_second) && isset($view_id) && ($view_id == "mt_commerce_products")) {
    $variables['main_grid_class'] = 'col-lg-9 order-2';
    $variables['sidebar_first_grid_class'] = 'col-lg-3 order-1';
    $variables['sidebar_second_grid_class'] = '';
  } elseif ((!$sidebar_first && $sidebar_second) && isset($view_id) && ($view_id == "mt_commerce_products")) {
    $variables['main_grid_class'] = 'col-lg-9';
    $variables['sidebar_first_grid_class'] = '';
    $variables['sidebar_second_grid_class'] = 'col-lg-3';
  }

  // Content Bottom
  $variables['content_bottom_layout_container'] = theme_get_setting('content_bottom_layout_container');

  if($content_bottom_second && $content_bottom_first) {
    $variables['content_bottom_first_grid_class'] = 'col-lg-5';
    $variables['content_bottom_second_grid_class'] = 'col-lg-7 ms-lg-auto';
  } elseif ($content_bottom_second || $content_bottom_first) {
    $variables['content_bottom_first_grid_class'] = 'col-12';
    $variables['content_bottom_second_grid_class'] = 'col-12';
  }

  // Content Bottom Highlighted
  $variables['content_bottom_highlighted_layout_container'] = theme_get_setting('content_bottom_highlighted_layout_container');

  // Featured Top
  $variables['featured_top_layout_container'] = theme_get_setting('featured_top_layout_container');

  // Featured
  $variables['featured_layout_container'] = theme_get_setting('featured_layout_container');

  // Featured Bottom
  $variables['featured_bottom_layout_container'] = theme_get_setting('featured_bottom_layout_container');

  // Sub Featured
  $variables['sub_featured_layout_container'] = theme_get_setting('sub_featured_layout_container');

  // Highlighted
  $variables['highlighted_layout_container'] = theme_get_setting('highlighted_layout_container');

  // Highlighted Top
  $variables['highlighted_top_layout_container'] = theme_get_setting('highlighted_top_layout_container');

  // Footer Top
  $variables['footer_top_layout_container'] = theme_get_setting('footer_top_layout_container');

  if($footer_top_first && $footer_top_second) {
    $variables['footer_top_regions'] = 'two-regions';
    $variables['footer_top_first_grid_class'] = 'col-lg-6';
    $variables['footer_top_second_grid_class'] = 'col-lg-6';
  } elseif ($footer_top_second || $footer_top_first) {
    $variables['footer_top_regions'] = 'one-region';
    $variables['footer_top_first_grid_class'] = 'col-12';
    $variables['footer_top_second_grid_class'] = 'col-12';
  }

  // Footer Layout
  $variables['footer_layout_container'] = theme_get_setting('footer_layout_container');

  if ($footer_fifth) {
    if ($footer_first && $footer_second && $footer_third && $footer_fourth) {
      $variables['footer_first_grid_class'] = 'col-md-6 col-xl-4';
      $variables['footer_second_grid_class'] = 'col-md-6 col-xl-2';
      $variables['footer_third_grid_class'] = 'col-md-4 col-xl-2';
      $variables['footer_fourth_grid_class'] = 'col-md-4 col-xl-2';
      $variables['footer_fifth_grid_class'] = 'col-md-4 col-xl-2';
    } elseif ((!$footer_first && $footer_second && $footer_third && $footer_fourth) || ($footer_first && $footer_second && !$footer_third && $footer_fourth)
      || ($footer_first && $footer_second && $footer_third && !$footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_second_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_third_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_fourth_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_fifth_grid_class'] = 'col-md-6 col-lg-3';
    } elseif (($footer_first && !$footer_second && $footer_third && $footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-6 col-lg-3 col-xl-6';
      $variables['footer_second_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_third_grid_class'] = 'col-md-6 col-lg-3 col-xl-2';
      $variables['footer_fourth_grid_class'] = 'col-md-6 col-lg-3 col-xl-2';
      $variables['footer_fifth_grid_class'] = 'col-md-6 col-lg-3 col-xl-2';
    } elseif ((!$footer_first && !$footer_second && $footer_third && $footer_fourth) || (!$footer_first && $footer_second && !$footer_third && $footer_fourth)
      || (!$footer_first && $footer_second && $footer_third && !$footer_fourth) || ($footer_first && !$footer_second && !$footer_third && $footer_fourth)
      || ($footer_first && !$footer_second && $footer_third && !$footer_fourth) || ($footer_first && $footer_second && !$footer_third && !$footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-4';
      $variables['footer_second_grid_class'] = 'col-md-4';
      $variables['footer_third_grid_class'] = 'col-md-4';
      $variables['footer_fourth_grid_class'] = 'col-md-4';
      $variables['footer_fifth_grid_class'] = 'col-md-4';
    } elseif (($footer_first && !$footer_second && !$footer_third && !$footer_fourth) || (!$footer_first && $footer_second && !$footer_third && !$footer_fourth)
      || (!$footer_first && !$footer_second && $footer_third && !$footer_fourth) || (!$footer_first && !$footer_second && !$footer_third && $footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-6';
      $variables['footer_second_grid_class'] = 'col-md-6';
      $variables['footer_third_grid_class'] = 'col-md-6';
      $variables['footer_fourth_grid_class'] = 'col-md-6';
      $variables['footer_fifth_grid_class'] = 'col-md-6';
    } else {
      $variables['footer_fifth_grid_class'] = 'col-12';
    }
  } else {
    if ($footer_first && $footer_second && $footer_third && $footer_fourth) {
      $variables['footer_first_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_second_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_third_grid_class'] = 'col-md-6 col-lg-3';
      $variables['footer_fourth_grid_class'] = 'col-md-6 col-lg-3';
    } elseif ((!$footer_first && $footer_second && $footer_third && $footer_fourth) || ($footer_first && !$footer_second && $footer_third && $footer_fourth)
      || ($footer_first && $footer_second && !$footer_third && $footer_fourth) || ($footer_first && $footer_second && $footer_third && !$footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-4';
      $variables['footer_second_grid_class'] = 'col-md-4';
      $variables['footer_third_grid_class'] = 'col-md-4';
      $variables['footer_fourth_grid_class'] = 'col-md-4';
    } elseif ((!$footer_first && !$footer_second && $footer_third && $footer_fourth) || (!$footer_first && $footer_second && !$footer_third && $footer_fourth)
      || (!$footer_first && $footer_second && $footer_third && !$footer_fourth) || ($footer_first && !$footer_second && !$footer_third && $footer_fourth)
      || ($footer_first && !$footer_second && $footer_third && !$footer_fourth)) {
      $variables['footer_first_grid_class'] = 'col-md-6';
      $variables['footer_second_grid_class'] = 'col-md-6';
      $variables['footer_third_grid_class'] = 'col-md-6';
      $variables['footer_fourth_grid_class'] = 'col-md-6';
    } elseif ($footer_first && $footer_second && !$footer_third && !$footer_fourth) {
      $variables['footer_first_grid_class'] = 'col-md-9';
      $variables['footer_second_grid_class'] = 'col-md-3';
      $variables['footer_third_grid_class'] = 'col-12';
      $variables['footer_fourth_grid_class'] = 'col-12';
    } else {
      $variables['footer_first_grid_class'] = 'col-12';
      $variables['footer_second_grid_class'] = 'col-12';
      $variables['footer_third_grid_class'] = 'col-12';
      $variables['footer_fourth_grid_class'] = 'col-12';
    }
  }

  if (($footer_first && $footer_second) && (($footer_third && $footer_fourth && !$footer_fifth) || ($footer_third && !$footer_fourth && $footer_fifth) || (!$footer_third && $footer_fourth && $footer_fifth))) {
    $variables['footer_4_columns_clearfix_first'] = "d-none d-md-block d-lg-none";
  } else {
    $variables['footer_4_columns_clearfix_first'] = "d-none d-sm-block d-md-none";
  }
  if (($footer_fourth && $footer_fifth) && (($footer_first && $footer_second && !$footer_third) || ($footer_first && !$footer_second && $footer_third) || (!$footer_first && $footer_second && $footer_third))) {
    $variables['footer_4_columns_clearfix_second'] = "d-none d-md-block d-lg-none";
  } else {
    $variables['footer_4_columns_clearfix_second'] = "d-none d-sm-block d-md-none";
  }
  if ($footer_first && $footer_second && $footer_third && $footer_fourth && $footer_fifth) {
    $variables['footer_5_columns_clearfix'] = "d-none d-md-block d-xl-none";
  } else {
    $variables['footer_5_columns_clearfix'] = "d-none d-sm-block d-md-none";
  }

  //Footer Bottom
  $variables['footer_bottom_layout_container'] = theme_get_setting('footer_bottom_layout_container');

  if ($footer_bottom_first && $footer_bottom_second && $footer_bottom_third && $footer_bottom_fourth) {
    $variables['footer_bottom_first_grid_class'] = 'col-md-6 col-lg-3 col-xl-3 me-xl-auto mb-5 mb-lg-0';
    $variables['footer_bottom_second_grid_class'] = 'col-md-6 col-lg-2 mb-5 mb-lg-0';
    $variables['footer_bottom_third_grid_class'] = 'col-md-6 col-lg-2 mb-5 mb-lg-0';
    $variables['footer_bottom_fourth_grid_class'] = 'col-md-6 col-lg-5 col-xl-4';
  } elseif ((!$footer_bottom_first && $footer_bottom_second && $footer_bottom_third && $footer_bottom_fourth) || ($footer_bottom_first && !$footer_bottom_second && $footer_bottom_third && $footer_bottom_fourth)
    || ($footer_bottom_first && $footer_bottom_second && !$footer_bottom_third && $footer_bottom_fourth) || ($footer_bottom_first && $footer_bottom_second && $footer_bottom_third && !$footer_bottom_fourth)) {
    $variables['footer_bottom_first_grid_class'] = 'col-md-4';
    $variables['footer_bottom_second_grid_class'] = 'col-md-4';
    $variables['footer_bottom_third_grid_class'] = 'col-md-4';
    $variables['footer_bottom_fourth_grid_class'] = 'col-md-4';
  } elseif ((!$footer_bottom_first && !$footer_bottom_second && $footer_bottom_third && $footer_bottom_fourth) || (!$footer_bottom_first && $footer_bottom_second && !$footer_bottom_third && $footer_bottom_fourth)
    || (!$footer_bottom_first && $footer_bottom_second && $footer_bottom_third && !$footer_bottom_fourth) || ($footer_bottom_first && !$footer_bottom_second && !$footer_bottom_third && $footer_bottom_fourth)
    || ($footer_bottom_first && !$footer_bottom_second && $footer_bottom_third && !$footer_bottom_fourth) || ($footer_bottom_first && $footer_bottom_second && !$footer_bottom_third && !$footer_bottom_fourth)) {
    $variables['footer_bottom_first_grid_class'] = 'col-12 col-md-6';
    $variables['footer_bottom_second_grid_class'] = 'col-12 col-md-6';
    $variables['footer_bottom_third_grid_class'] = 'col-12 col-md-6';
    $variables['footer_bottom_fourth_grid_class'] = 'col-12 col-md-6';
  } else {
    $variables['footer_bottom_first_grid_class'] = 'col-12';
    $variables['footer_bottom_second_grid_class'] = 'col-12';
    $variables['footer_bottom_third_grid_class'] = 'col-12';
    $variables['footer_bottom_fourth_grid_class'] = 'col-12';
  }

  //Subfooter Top
  $variables['subfooter_top_layout_container'] = theme_get_setting('subfooter_top_layout_container');

  // Footer Bottom Layout
  if ($subfooter_top_second) {
    if($subfooter_top_first && $subfooter_top_third) {
      $variables['subfooter_top_second_grid_class'] = 'col-lg-6';
      $variables['subfooter_top_first_grid_class'] = 'col-lg-3';
      $variables['subfooter_top_third_grid_class'] = 'col-lg-3';
    } elseif ($subfooter_top_first && !$subfooter_top_third) {
      $variables['subfooter_top_second_grid_class'] = 'col-lg-8';
      $variables['subfooter_top_first_grid_class'] = 'col-lg-4';
      $variables['subfooter_top_third_grid_class'] = '';
    } elseif (!$subfooter_top_first && $subfooter_top_third) {
      $variables['subfooter_top_second_grid_class'] = 'col-lg-8';
      $variables['subfooter_top_first_grid_class'] = '';
      $variables['subfooter_top_third_grid_class'] = 'col-lg-4';
    } else {
      $variables['subfooter_top_second_grid_class'] = 'col-12';
      $variables['subfooter_top_first_grid_class'] = '';
      $variables['subfooter_top_third_grid_class'] = '';
    }
  } else {
    if($subfooter_top_first && $subfooter_top_third) {
      $variables['subfooter_top_first_grid_class'] = 'col-lg-6';
      $variables['subfooter_top_third_grid_class'] = 'col-lg-6';
    } else {
      $variables['subfooter_top_first_grid_class'] = 'col-12';
      $variables['subfooter_top_third_grid_class'] = 'col-12';
    }
  }

  // Subfooter
  $variables['subfooter_layout_container'] = theme_get_setting('subfooter_layout_container');

  if($subfooter_second && $subfooter_first) {
    $variables['subfooter_first_grid_class'] = 'col-lg-6';
    $variables['subfooter_second_grid_class'] = 'col-lg-6';
  } elseif ($subfooter_second || $subfooter_first) {
    $variables['subfooter_second_grid_class'] = 'col-12 text-center';
    $variables['subfooter_first_grid_class'] = 'col-12 text-center';
  }

  // Footer sticky
  $variables['sticky_footer_layout_container'] = theme_get_setting('sticky_footer_layout_container');

  // Animations
  $animations_state = theme_get_setting('animations_state');
  $variables['header_top_highlighted_animation_effect'] = theme_get_setting('header_top_highlighted_animation_effect');
  if ($animations_state && $variables['header_top_highlighted_animation_effect'] != "no-animation") {
    $variables['header_top_highlighted_animations'] = "enabled";
  } else {
    $variables['header_top_highlighted_animations'] = "disabled";
  }

  $variables['header_top_animation_effect'] = theme_get_setting('header_top_animation_effect');
  if ($animations_state && $variables['header_top_animation_effect'] != "no-animation") {
    $variables['header_top_animations'] = "enabled";
  } else {
    $variables['header_top_animations'] = "disabled";
  }

  $variables['hero_top_animation_effect'] = theme_get_setting('hero_top_animation_effect');
  if ($animations_state && $variables['hero_top_animation_effect'] != "no-animation") {
    $variables['hero_top_animations'] = "enabled";
  } else {
    $variables['hero_top_animations'] = "disabled";
  }

  $variables['hero_animation_effect'] = theme_get_setting('hero_animation_effect');
  if ($animations_state && $variables['hero_animation_effect'] != "no-animation") {
    $variables['hero_animations'] = "enabled";
  } else {
    $variables['hero_animations'] = "disabled";
  }

  $variables['content_top_animation_effect'] = theme_get_setting('content_top_animation_effect');
  if ($animations_state && $variables['content_top_animation_effect'] != "no-animation") {
    $variables['content_top_animations'] = "enabled";
  } else {
    $variables['content_top_animations'] = "disabled";
  }

  $variables['content_top_highlighted_animation_effect'] = theme_get_setting('content_top_highlighted_animation_effect');
  if ($animations_state && $variables['content_top_highlighted_animation_effect'] != "no-animation") {
    $variables['content_top_highlighted_animations'] = "enabled";
  } else {
    $variables['content_top_highlighted_animations'] = "disabled";
  }

  $variables['main_content_animation_effect'] = theme_get_setting('main_content_animation_effect');
  if ($animations_state && $variables['main_content_animation_effect'] != "no-animation") {
    $variables['main_content_animations'] = "enabled";
  } else {
    $variables['main_content_animations'] = "disabled";
  }

  $variables['sidebar_first_animation_effect'] = theme_get_setting('sidebar_first_animation_effect');
  if ($animations_state && $variables['sidebar_first_animation_effect'] != "no-animation") {
    $variables['sidebar_first_animations'] = "enabled";
  } else {
    $variables['sidebar_first_animations'] = "disabled";
  }

  $variables['sidebar_second_animation_effect'] = theme_get_setting('sidebar_second_animation_effect');
  if ($animations_state && $variables['sidebar_second_animation_effect'] != "no-animation") {
    $variables['sidebar_second_animations'] = "enabled";
  } else {
    $variables['sidebar_second_animations'] = "disabled";
  }

  $variables['content_bottom_animation_effect'] = theme_get_setting('content_bottom_animation_effect');
  if ($animations_state && $variables['content_bottom_animation_effect'] != "no-animation") {
    $variables['content_bottom_animations'] = "enabled";
  } else {
    $variables['content_bottom_animations'] = "disabled";
  }

  $variables['content_bottom_highlighted_animation_effect'] = theme_get_setting('content_bottom_highlighted_animation_effect');
  if ($animations_state && $variables['content_bottom_highlighted_animation_effect'] != "no-animation") {
    $variables['content_bottom_highlighted_animations'] = "enabled";
  } else {
    $variables['content_bottom_highlighted_animations'] = "disabled";
  }

  $variables['featured_top_animation_effect'] = theme_get_setting('featured_top_animation_effect');
  if ($animations_state && $variables['featured_top_animation_effect'] != "no-animation") {
    $variables['featured_top_animations'] = "enabled";
  } else {
    $variables['featured_top_animations'] = "disabled";
  }

  $variables['featured_animation_effect'] = theme_get_setting('featured_animation_effect');
  if ($animations_state && $variables['featured_animation_effect'] != "no-animation") {
    $variables['featured_animations'] = "enabled";
  } else {
    $variables['featured_animations'] = "disabled";
  }

  $variables['featured_bottom_animation_effect'] = theme_get_setting('featured_bottom_animation_effect');
  if ($animations_state && $variables['featured_bottom_animation_effect'] != "no-animation") {
    $variables['featured_bottom_animations'] = "enabled";
  } else {
    $variables['featured_bottom_animations'] = "disabled";
  }

  $variables['sub_featured_animation_effect'] = theme_get_setting('sub_featured_animation_effect');
  if ($animations_state && $variables['sub_featured_animation_effect'] != "no-animation") {
    $variables['sub_featured_animations'] = "enabled";
  } else {
    $variables['sub_featured_animations'] = "disabled";
  }

  $variables['highlighted_animation_effect'] = theme_get_setting('highlighted_animation_effect');
  if ($animations_state && $variables['highlighted_animation_effect'] != "no-animation") {
    $variables['highlighted_animations'] = "enabled";
  } else {
    $variables['highlighted_animations'] = "disabled";
  }

  $variables['highlighted_top_animation_effect'] = theme_get_setting('highlighted_top_animation_effect');
  if ($animations_state && $variables['highlighted_top_animation_effect'] != "no-animation") {
    $variables['highlighted_top_animations'] = "enabled";
  } else {
    $variables['highlighted_top_animations'] = "disabled";
  }

  $variables['footer_top_animation_effect'] = theme_get_setting('footer_top_animation_effect');
  if ($animations_state && $variables['footer_top_animation_effect'] != "no-animation") {
    $variables['footer_top_animations'] = "enabled";
  } else {
    $variables['footer_top_animations'] = "disabled";
  }

  $variables['footer_animation_effect'] = theme_get_setting('footer_animation_effect');
  if ($animations_state && $variables['footer_animation_effect'] != "no-animation") {
    $variables['footer_animations'] = "enabled";
  } else {
    $variables['footer_animations'] = "disabled";
  }

  // Region ids
  $variables['banner_id'] = theme_get_setting('banner_id');
  $variables['hero_top_id'] = theme_get_setting('hero_top_id');
  $variables['hero_id'] = theme_get_setting('hero_id');
  $variables['content_top_id'] = theme_get_setting('content_top_id');
  $variables['content_top_highlighted_id'] = theme_get_setting('content_top_highlighted_id');
  $variables['main_content_id'] = theme_get_setting('main_content_id');
  $variables['content_bottom_id'] = theme_get_setting('content_bottom_id');
  $variables['content_bottom_highlighted_id'] = theme_get_setting('content_bottom_highlighted_id');
  $variables['featured_top_id'] = theme_get_setting('featured_top_id');
  $variables['featured_id'] = theme_get_setting('featured_id');
  $variables['featured_bottom_id'] = theme_get_setting('featured_bottom_id');
  $variables['sub_featured_id'] = theme_get_setting('sub_featured_id');
  $variables['highlighted_top_id'] = theme_get_setting('highlighted_top_id');
  $variables['highlighted_id'] = theme_get_setting('highlighted_id');
  $variables['footer_top_id'] = theme_get_setting('footer_top_id');
  $variables['footer_id'] = theme_get_setting('footer_id');
  $variables['footer_bottom_id'] = theme_get_setting('footer_bottom_id');
  $variables['subfooter_top_id'] = theme_get_setting('subfooter_top_id');
  $variables['subfooter_id'] = theme_get_setting('subfooter_id');

  // Region Background Color
  $variables['slideout_background_color'] = theme_get_setting('slideout_background_color');
  $variables['header_top_highlighted_background_color'] = theme_get_setting('header_top_highlighted_background_color');
  $variables['header_top_background_color'] = theme_get_setting('header_top_background_color');
  $variables['header_background_color'] = theme_get_setting('header_background_color');
  $variables['banner_background_color'] = theme_get_setting('banner_background_color');
  $variables['hero_top_background_color'] = theme_get_setting('hero_top_background_color');
  $variables['hero_background_color'] = theme_get_setting('hero_background_color');
  $variables['content_top_background_color'] = theme_get_setting('content_top_background_color');
  $variables['content_top_highlighted_background_color'] = theme_get_setting('content_top_highlighted_background_color');
  $variables['main_content_background_color'] = theme_get_setting('main_content_background_color');
  $variables['content_bottom_background_color'] = theme_get_setting('content_bottom_background_color');
  $variables['content_bottom_highlighted_background_color'] = theme_get_setting('content_bottom_highlighted_background_color');
  $variables['featured_top_background_color'] = theme_get_setting('featured_top_background_color');
  $variables['featured_background_color'] = theme_get_setting('featured_background_color');
  $variables['featured_bottom_background_color'] = theme_get_setting('featured_bottom_background_color');
  $variables['sub_featured_background_color'] = theme_get_setting('sub_featured_background_color');
  $variables['highlighted_background_color'] = theme_get_setting('highlighted_background_color');
  $variables['highlighted_top_background_color'] = theme_get_setting('highlighted_top_background_color');
  $variables['footer_top_background_color'] = theme_get_setting('footer_top_background_color');
  $variables['footer_background_color'] = theme_get_setting('footer_background_color');
  $variables['footer_bottom_background_color'] = theme_get_setting('footer_bottom_background_color');
  $variables['subfooter_top_background_color'] = theme_get_setting('subfooter_top_background_color');
  $variables['subfooter_background_color'] = theme_get_setting('subfooter_background_color');
  $variables['sticky_footer_background_color'] = theme_get_setting('sticky_footer_background_color');

  //Region Separator
  $variables['content_top_highlighted_separator'] = theme_get_setting('content_top_highlighted_separator');
  $variables['main_content_separator'] = theme_get_setting('main_content_separator');
  $variables['content_bottom_separator'] = theme_get_setting('content_bottom_separator');
  $variables['content_bottom_highlighted_separator'] = theme_get_setting('content_bottom_highlighted_separator');
  $variables['featured_top_separator'] = theme_get_setting('featured_top_separator');
  $variables['featured_separator'] = theme_get_setting('featured_separator');
  $variables['featured_bottom_separator'] = theme_get_setting('featured_bottom_separator');
  $variables['sub_featured_separator'] = theme_get_setting('sub_featured_separator');
  $variables['highlighted_top_separator'] = theme_get_setting('highlighted_top_separator');
  $variables['highlighted_separator'] = theme_get_setting('highlighted_separator');
  $variables['footer_top_separator'] = theme_get_setting('footer_top_separator');
  $variables['footer_separator'] = theme_get_setting('footer_separator');
  $variables['footer_bottom_separator'] = theme_get_setting('footer_bottom_separator');
  $variables['subfooter_top_separator'] = theme_get_setting('subfooter_top_separator');
  $variables['subfooter_separator'] = theme_get_setting('subfooter_separator');

  // Region Blocks Paddings
  $variables['slideout_blocks_paddings'] = theme_get_setting('slideout_blocks_paddings');
  $variables['header_top_highlighted_blocks_paddings'] = theme_get_setting('header_top_highlighted_blocks_paddings');
  $variables['header_top_blocks_paddings'] = theme_get_setting('header_top_blocks_paddings');
  $variables['header_blocks_paddings'] = theme_get_setting('header_blocks_paddings');
  $variables['banner_blocks_paddings'] = theme_get_setting('banner_blocks_paddings');
  $variables['hero_top_blocks_paddings'] = theme_get_setting('hero_top_blocks_paddings');
  $variables['hero_blocks_paddings'] = theme_get_setting('hero_blocks_paddings');
  $variables['content_top_blocks_paddings'] = theme_get_setting('content_top_blocks_paddings');
  $variables['content_top_highlighted_blocks_paddings'] = theme_get_setting('content_top_highlighted_blocks_paddings');
  $variables['main_content_blocks_paddings'] = theme_get_setting('main_content_blocks_paddings');
  $variables['content_bottom_highlighted_blocks_paddings'] = theme_get_setting('content_bottom_highlighted_blocks_paddings');
  $variables['sidebar_first_blocks_paddings'] = theme_get_setting('sidebar_first_blocks_paddings');
  $variables['sidebar_second_blocks_paddings'] = theme_get_setting('sidebar_second_blocks_paddings');
  $variables['content_bottom_blocks_paddings'] = theme_get_setting('content_bottom_blocks_paddings');
  $variables['featured_top_blocks_paddings'] = theme_get_setting('featured_top_blocks_paddings');
  $variables['featured_blocks_paddings'] = theme_get_setting('featured_blocks_paddings');
  $variables['featured_bottom_blocks_paddings'] = theme_get_setting('featured_bottom_blocks_paddings');
  $variables['sub_featured_blocks_paddings'] = theme_get_setting('sub_featured_blocks_paddings');
  $variables['highlighted_top_blocks_paddings'] = theme_get_setting('highlighted_top_blocks_paddings');
  $variables['highlighted_blocks_paddings'] = theme_get_setting('highlighted_blocks_paddings');
  $variables['footer_top_blocks_paddings'] = theme_get_setting('footer_top_blocks_paddings');
  $variables['footer_blocks_paddings'] = theme_get_setting('footer_blocks_paddings');
  $variables['footer_bottom_blocks_paddings'] = theme_get_setting('footer_bottom_blocks_paddings');
  $variables['subfooter_top_blocks_paddings'] = theme_get_setting('subfooter_top_blocks_paddings');
  $variables['subfooter_blocks_paddings'] = theme_get_setting('subfooter_blocks_paddings');
  $variables['sticky_footer_blocks_paddings'] = theme_get_setting('sticky_footer_blocks_paddings');

  // Region Region Paddings
  $variables['slideout_region_paddings'] = theme_get_setting('slideout_region_paddings');
  $variables['header_top_highlighted_region_paddings'] = theme_get_setting('header_top_highlighted_region_paddings');
  $variables['header_top_region_paddings'] = theme_get_setting('header_top_region_paddings');
  $variables['header_region_paddings'] = theme_get_setting('header_region_paddings');
  $variables['banner_region_paddings'] = theme_get_setting('banner_region_paddings');
  $variables['hero_top_region_paddings'] = theme_get_setting('hero_top_region_paddings');
  $variables['hero_region_paddings'] = theme_get_setting('hero_region_paddings');
  $variables['content_top_region_paddings'] = theme_get_setting('content_top_region_paddings');
  $variables['content_top_highlighted_region_paddings'] = theme_get_setting('content_top_highlighted_region_paddings');
  $variables['main_content_region_paddings'] = theme_get_setting('main_content_region_paddings');
  $variables['sidebar_first_region_paddings'] = theme_get_setting('sidebar_first_region_paddings');
  $variables['sidebar_second_region_paddings'] = theme_get_setting('sidebar_second_region_paddings');
  $variables['content_bottom_region_paddings'] = theme_get_setting('content_bottom_region_paddings');
  $variables['content_bottom_highlighted_region_paddings'] = theme_get_setting('content_bottom_highlighted_region_paddings');
  $variables['featured_top_region_paddings'] = theme_get_setting('featured_top_region_paddings');
  $variables['featured_region_paddings'] = theme_get_setting('featured_region_paddings');
  $variables['featured_bottom_region_paddings'] = theme_get_setting('featured_bottom_region_paddings');
  $variables['sub_featured_region_paddings'] = theme_get_setting('sub_featured_region_paddings');
  $variables['highlighted_top_region_paddings'] = theme_get_setting('highlighted_top_region_paddings');
  $variables['highlighted_region_paddings'] = theme_get_setting('highlighted_region_paddings');
  $variables['footer_top_region_paddings'] = theme_get_setting('footer_top_region_paddings');
  $variables['footer_region_paddings'] = theme_get_setting('footer_region_paddings');
  $variables['footer_bottom_region_paddings'] = theme_get_setting('footer_bottom_region_paddings');
  $variables['subfooter_top_region_paddings'] = theme_get_setting('subfooter_top_region_paddings');
  $variables['subfooter_region_paddings'] = theme_get_setting('subfooter_region_paddings');
  $variables['sticky_footer_region_paddings'] = theme_get_setting('sticky_footer_region_paddings');

  // Slideout mobile menu
  $variables['slideout_mobile_menu_display'] = theme_get_setting('slideout_mobile_menu_display');

  //Load to-top library
  $variables['scroll_to_top_display'] = theme_get_setting('scroll_to_top_display');
  if ($variables['scroll_to_top_display']) {
    $variables['#attached']['library'][] = 'basecore/to-top';
    $variables['scroll_to_top_icon'] = theme_get_setting('scroll_to_top_icon');
  }

  // Load mobile-menu-widget library
  $variables['mobile_menu_widget_display'] = theme_get_setting('mobile_menu_widget_display');
  if ($variables['mobile_menu_widget_display']) {
    $variables['#attached']['library'][] = 'basecore/mobile-menu-widget';
    $variables['mobile_menu_widget_sticky'] = theme_get_setting('mobile_menu_widget_sticky');
  }

  //Load purechat library
  $variables['purechat_display'] = theme_get_setting('purechat_display');
  if ($variables['purechat_display']) {
    $variables['#attached']['library'][] = 'basecore/purechat';
  }

  // (PWA-LIB) Load pwa library
  if (theme_get_setting('enable_pwa')) {
    $variables['#attached']['library'][] = 'basecore/pwa';
  }
  // (PWA-LIB-END)

  //Post reading progress bar
  $variables['post_progress'] = theme_get_setting('post_progress');

  //Sticky footer trigger text
  $variables['sticky_footer_trigger_text'] = trim(theme_get_setting('sticky_footer_trigger_text'));

  if ($variables['page']['sticky_footer'] && empty($variables['sticky_footer_trigger_text'])) {
    // Retrieve active theme
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    // For each region
    // Load region blocks
    $sticky_footer_blocks = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties([
      'theme' => $theme,
      'region' => 'sticky_footer',
    ]);
    //Compare function to sort by block weight
    function mt_compare_weight($a, $b) {
      if($a->getWeight() == $b->getWeight()) {
        return 0;
      }
      return ($a->getWeight() < $b->getWeight()) ? -1 : 1;
    }
    //Sort blocks by weight
    uasort($sticky_footer_blocks, 'mt_compare_weight');
    //Check if each block should be rendered and stop at first result
    foreach ($sticky_footer_blocks as $key => $block) {
      if (!empty($block) && $block instanceof \Drupal\block\BlockInterface && $block->access('view')) {
        $variables['sticky_footer_trigger_text'] = $block->label();
        break;
      }
    }
  }

}

function basecore_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Add content type suggestions.
  $node = _safe_load_current_node();
  $node = \Drupal::request()->attributes->get('node');
  if (!empty($node) && $node instanceof \Drupal\node\NodeInterface) {
    array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());
  }

  // system error page suggestions
  $path_args = explode('/', trim(\Drupal::service('path.current')->getPath(), '/'));
  $http_error_suggestions = [
    'system.401' => 'page__401',
    'system.403' => 'page__403',
    'system.404' => 'page__404',
  ];
  $route_name = \Drupal::routeMatch()->getRouteName();
  if (isset($http_error_suggestions[$route_name])) {
    $suggestions[] = $http_error_suggestions[$route_name];
  }
  return $suggestions;

}

function basecore_preprocess_page__node__mt_service(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';
  $field_banner = 'field_mt_srv_banner_image';
  $field_link = 'field_mt_srv_link';
  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    if (isset($entity->{$field_banner})) {
      $variables['mt_srv_internal_banner'] = $entity->{$field_banner}->view($view_mode);
    }
    if (isset($entity->{$field_link})) {
      $variables['mt_srv_link'] = $entity->{$field_link}->view($view_mode);
    }
  }
}

function basecore_preprocess_node__mt_post(&$variables) {
  $variables['mt_setting']['total_node_views'] = theme_get_setting('total_node_views');
  $variables['mt_setting']['reading_time'] = theme_get_setting('reading_time');
  $variables['mt_setting']['share_links'] = theme_get_setting('share_links');
  $variables['mt_setting']['print_button'] = theme_get_setting('print_button');
  $variables['mt_setting']['font_resize'] = theme_get_setting('font_resize');
  $variables['mt_setting']['sticky_side'] = theme_get_setting('sticky_side');

  // Count the words of article in order to calculate the reading time
  $node_content = $variables['content'];
  $node_content = \Drupal::service('renderer')->render($node_content);
  $words = str_word_count(strip_tags($node_content));
  if (isset($variables['content']['comment'])) {
    $node_comments = $variables['content']['comment'];
    $node_comments = \Drupal::service('renderer')->render($node_comments);
    $words = $words - str_word_count(strip_tags($node_comments));
  }
  $variables['minutes'] = floor($words / 275);

  // Get views count through the statistics module
  if ($variables['mt_setting']['total_node_views']) {
    if (\Drupal::hasService('statistics.storage.node')) {
      $count_content_views = \Drupal::config('statistics.settings')->get('count_content_views');
      if ($count_content_views) {
        $statistics = \Drupal::service('statistics.storage.node')->fetchView($variables['node']->id());
        if ($statistics) {
          $dayCount  = $statistics->getDayCount();
          $totalCount  = $statistics->getTotalCount();
          if (!empty($dayCount)) {
            $variables['day_views_count'] = $dayCount;
          }
          if (!empty($totalCount)) {
            $variables['total_views_count'] = $totalCount;
          }
        }
      }
    }
  }

  if (isset($variables['node']->field_mt_pst_comment)) {
    $comment_count = $variables['node']->get('field_mt_pst_comment')->__get('comment_count');
    if ($comment_count) {
      $variables['comment_count'] = $comment_count;
    } else {
      $variables['comment_count'] = "0";
    }
  }
}

function basecore_preprocess_page__node__mt_showcase(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';
  $field_banner = 'field_mt_shw_banner_image';

  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    if (isset($entity->{$field_banner})) {
      $variables['mt_shw_internal_banner'] = $entity->{$field_banner}->view($view_mode);
    }
    $variables['mt_display_submitted'] = $entity->type->entity->displaySubmitted();
  }

  if (isset($variables['node'])) {
    $node_user = \Drupal::entityTypeManager()->getStorage('user')->load($variables['node']->getOwnerId());
    if ($node_user) {
      $build_user = [];
      $check_access = TRUE;
      $user_view_mode = 'compact';
      $access = $check_access ? $entity->access('view', NULL, TRUE) : AccessResult::allowed();
      if ($access->isAllowed()) {
        $build_user = \Drupal::entityTypeManager()
          ->getViewBuilder($node_user->getEntityTypeId())
          ->view($node_user, $user_view_mode, $langcode);
      }
      CacheableMetadata::createFromRenderArray($build_user)
        ->merge(CacheableMetadata::createFromObject($node_user))
        ->merge(CacheableMetadata::createFromObject($access))
        ->applyTo($build_user);
    }
    $variables['mt_node_user'] = $build_user;
  }
}

function basecore_preprocess_page__node__news(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';

  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    $variables['mt_display_submitted'] = $entity->type->entity->displaySubmitted();
  }

  if (isset($variables['node'])) {
    $node_user = \Drupal::entityTypeManager()->getStorage('user')->load($variables['node']->getOwnerId());
    if ($node_user) {
      $build_user = [];
      $check_access = TRUE;
      $user_view_mode = 'compact';
      $access = $check_access ? $node_user->access('view', NULL, TRUE) : AccessResult::allowed();
      if ($access->isAllowed()) {
        $build_user = \Drupal::entityTypeManager()
          ->getViewBuilder($node_user->getEntityTypeId())
          ->view($node_user, $user_view_mode, $langcode);
      }
      CacheableMetadata::createFromRenderArray($build_user)
        ->merge(CacheableMetadata::createFromObject($node_user))
        ->merge(CacheableMetadata::createFromObject($access))
        ->applyTo($build_user);
      $variables['mt_node_user'] = $build_user;
    }
  }
}

function basecore_preprocess_page__node__blog(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';

  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    $variables['mt_display_submitted'] = $entity->type->entity->displaySubmitted();
  }

  if (isset($variables['node'])) {
    $node_user = \Drupal::entityTypeManager()->getStorage('user')->load($variables['node']->getOwnerId());
    if ($node_user) {
      $build_user = [];
      $check_access = TRUE;
      $user_view_mode = 'compact';
      $access = $check_access ? $node_user->access('view', NULL, TRUE) : AccessResult::allowed();
      if ($access->isAllowed()) {
        $build_user = \Drupal::entityTypeManager()
          ->getViewBuilder($node_user->getEntityTypeId())
          ->view($node_user, $user_view_mode, $langcode);
      }
      CacheableMetadata::createFromRenderArray($build_user)
        ->merge(CacheableMetadata::createFromObject($node_user))
        ->merge(CacheableMetadata::createFromObject($access))
        ->applyTo($build_user);
      $variables['mt_node_user'] = $build_user;
    }
  }
}

function basecore_preprocess_page__node__mt_post(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';
  $field_banner = 'field_mt_pst_banner_image';
  $field_category = 'field_mt_pst_category';
  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    if (isset($entity->{$field_banner})) {
      $variables['mt_pst_internal_banner'] = $entity->{$field_banner}->view($view_mode);
    }
    if (isset($entity->{$field_category})) {
      $variables['mt_pst_category'] = $entity->{$field_category}->view($view_mode);
    }
    $variables['mt_display_submitted'] = $entity->type->entity->displaySubmitted();
  }
}

function basecore_preprocess_page__node__mt_product(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';
  $field_buy_link = 'field_mt_prd_buy_link';
  $field_price = 'field_mt_prd_price';
  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    if (isset($entity->{$field_buy_link})) {
      $variables['mt_prd_buy_link'] = $entity->{$field_buy_link}->view($view_mode);
    }
    if (isset($entity->{$field_price})) {
      $variables['mt_prd_price'] = $entity->{$field_price}->view($view_mode);
    }
  }
}

function basecore_preprocess_page__node__mt_team_member(&$variables) {
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if (empty($langcode)) {
    $langcode = NULL;
  }
  $check_access = TRUE;
  $view_mode = 'default';
  $entity_type = 'node';
  $field_subtitle = 'field_mt_tmm_subtitle';
  $id = \Drupal::request()->attributes->get('node')->id();
  $entity = $id
    ? \Drupal::entityTypeManager()->getStorage($entity_type)->load($id)
    : \Drupal::routeMatch()->getParameter($entity_type);
  if ($entity && (!$check_access || $entity->access('view'))) {
    if ($langcode && $entity->hasTranslation($langcode)) {
      $entity = $entity->getTranslation($langcode);
    }
    if (isset($entity->{$field_subtitle})) {
      $variables['mt_tmm_subtitle'] = $entity->{$field_subtitle}->view($view_mode);
    }
  }
}

function basecore_preprocess_node__mt_team_member__mt_teaser_tile(&$variables) {
  if (!empty($variables['content']['field_mt_tmm_twitter_account']['#items'])) {
    $field_twitter = $variables['content']['field_mt_tmm_twitter_account']['#items']->first()->getValue()['value'];
    $field_twitter_display = "d-inline-block";
  } else {
    $field_twitter = null;
    $field_twitter_display = "d-none";
  }
  if (!empty($variables['content']['field_mt_tmm_facebook_account']['#items'])) {
    $field_facebook = $variables['content']['field_mt_tmm_facebook_account']['#items']->first()->getValue()['value'];
    $field_facebook_display = "d-inline-block";
  } else {
    $field_facebook = null;
    $field_facebook_display = "d-none";
  }
  if (!empty($variables['content']['field_mt_tmm_linkedin_account']['#items'])) {
    $field_linkedin = $variables['content']['field_mt_tmm_linkedin_account']['#items']->first()->getValue()['value'];
    $field_linkedin_display = "d-inline-block";
  } else {
    $field_linkedin = null;
    $field_linkedin_display = "d-none";
  }
  if (!empty($variables['content']['field_mt_tmm_youtube_account']['#items'])) {
    $field_youtube = $variables['content']['field_mt_tmm_youtube_account']['#items']->first()->getValue()['value'];
    $field_youtube_display = "d-inline-block";
  } else {
    $field_youtube = null;
    $field_youtube_display = "d-none";
  }

  $variables['social_accounts'] = [
    '#type' => 'inline_template',
    '#template' => '<ul class="icons-list icons-list--dark d-flex justify-content-around mx-0 px-3"><li class="{{ twitter_display }}"><a target="_blank" href="{{ twitter }}"><i class="fab fa-twitter"></i><span class="sr-only">twitter</span></a></li><li class="{{ facebook_display }}"><a target="_blank" href="{{ facebook }}"><i class="fab fa-facebook"></i><span class="sr-only">facebook</span></a></li><li class="{{ linkedin_display }}"><a target="_blank" href="{{ linkedin }}"><i class="fab fa-linkedin"></i><span class="sr-only">linkedin</span></a></li><li class="{{ youtube_display }}"><a target="_blank" href="{{ youtube }}"><i class="fab fa-youtube"></i><span class="sr-only">youtube</span></a></li></ul>',
    '#context' => [
      'twitter' => $field_twitter,
      'twitter_display' => $field_twitter_display,
      'facebook' => $field_facebook,
      'facebook_display' => $field_facebook_display,
      'linkedin' => $field_linkedin,
      'linkedin_display' => $field_linkedin_display,
      'youtube' => $field_youtube,
      'youtube_display' => $field_youtube_display,
    ],
  ];
}

function basecore_page_attachments_alter(&$page) {

  // Purechat api key
  $purechat_key = Html::escape(theme_get_setting('purechat_key'));
  $page['#attached']['drupalSettings']['basecore']['purechatInit']['purechatKey'] = $purechat_key;

  // Slideshow's caption Opacity
  $slideshow_caption_opacity = (int) theme_get_setting('rs_slideshow_caption_opacity')/100;
  $page['#attached']['drupalSettings']['basecore']['slideshowCaptionOpacity'] = $slideshow_caption_opacity;

  // Slideshow's background Opacity
  $rs_slideshow_background_opacity = (int) theme_get_setting('rs_slideshow_background_opacity')/100;
  $page['#attached']['drupalSettings']['basecore']['slideshowBackgroundOpacity'] = $rs_slideshow_background_opacity;

  // Full Width Slideshow
  $slideshow_fullwidth_effect_time = (int) theme_get_setting('rs_slideshow_fullwidth_effect_time')*1000;
  $slideshow_fullwidth_initial_height = (int) theme_get_setting('rs_slideshow_fullwidth_initial_height');
  $slideshow_fullwidth_auto_height = theme_get_setting('rs_slideshow_fullwidth_auto_height');
  $slideshow_fullwidth_navigation_style = theme_get_setting('rs_slideshow_fullwidth_navigation_style');
  $slideshow_fullwidth_bullets_position = theme_get_setting('rs_slideshow_fullwidth_bullets_position');
  $slideshow_fullwidth_touch_swipe = theme_get_setting('rs_slideshow_fullwidth_touch_swipe');

  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthEffectTime'] = $slideshow_fullwidth_effect_time;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthInitialHeight'] = $slideshow_fullwidth_initial_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthAutoHeight'] = $slideshow_fullwidth_auto_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthNavigationStyle'] = $slideshow_fullwidth_navigation_style;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthBulletsPosition'] = $slideshow_fullwidth_bullets_position;
  if ($slideshow_fullwidth_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthTouchSwipe'] = "on";
  } else {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullWidthInit']['slideshowFullWidthTouchSwipe'] = "off";
  }

  // Full Screen Slideshow
  $slideshow_fullscreen_effect_time = (int) theme_get_setting('rs_slideshow_fullscreen_effect_time')*1000;
  $slideshow_fullscreen_navigation_style = theme_get_setting('rs_slideshow_fullscreen_navigation_style');
  $slideshow_fullscreen_bullets_position = theme_get_setting('rs_slideshow_fullscreen_bullets_position');
  $slideshow_fullscreen_touch_swipe = theme_get_setting('rs_slideshow_fullscreen_touch_swipe');

  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullScreenInit']['slideshowFullScreenEffectTime'] = $slideshow_fullscreen_effect_time;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullScreenInit']['slideshowFullScreenNavigationStyle'] = $slideshow_fullscreen_navigation_style;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullScreenInit']['slideshowFullScreenBulletsPosition'] = $slideshow_fullscreen_bullets_position;
  if ($slideshow_fullscreen_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullScreenInit']['slideshowFullScreenTouchSwipe'] = "on";
  } else {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionFullScreenInit']['slideshowFullScreenTouchSwipe'] = "off";
  }

  // Boxed Width Slideshow
  $slideshow_boxedwidth_effect_time = (int) theme_get_setting('rs_slideshow_boxedwidth_effect_time')*1000;
  $slideshow_boxedwidth_initial_height = (int) theme_get_setting('rs_slideshow_boxedwidth_initial_height');
  $slideshow_boxedwidth_auto_height = theme_get_setting('rs_slideshow_boxedwidth_auto_height');
  $slideshow_boxedwidth_navigation_style = theme_get_setting('rs_slideshow_boxedwidth_navigation_style');
  $slideshow_boxedwidth_bullets_position = theme_get_setting('rs_slideshow_boxedwidth_bullets_position');
  $slideshow_boxedwidth_touch_swipe = theme_get_setting('rs_slideshow_boxedwidth_touch_swipe');

  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthEffectTime'] = $slideshow_boxedwidth_effect_time;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthInitialHeight'] = $slideshow_boxedwidth_initial_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthAutoHeight'] = $slideshow_boxedwidth_auto_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthNavigationStyle'] = $slideshow_boxedwidth_navigation_style;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthBulletsPosition'] = $slideshow_boxedwidth_bullets_position;
  if ($slideshow_boxedwidth_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthTouchSwipe'] = "on";
  } else {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionBoxedWidthInit']['slideshowBoxedWidthTouchSwipe'] = "off";
  }

  // Internal Banner Slideshow
  $slideshow_internal_banner_effect_time = (int) theme_get_setting('rs_slideshow_internal_effect_time')*1000;
  $slideshow_internal_banner_initial_height = (int) theme_get_setting('rs_slideshow_internal_initial_height');
  $slideshow_internal_banner_auto_height = theme_get_setting('rs_slideshow_internal_auto_height');
  $slideshow_internal_navigation_style = theme_get_setting('rs_slideshow_internal_navigation_style');
  $slideshow_internal_banner_bullets_position = theme_get_setting('rs_slideshow_internal_bullets_position');
  $slideshow_internal_banner_layout = theme_get_setting('rs_slideshow_internal_layout');
  $slideshow_internal_banner_touch_swipe = theme_get_setting('rs_slideshow_internal_touch_swipe');

  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerEffectTime'] = $slideshow_internal_banner_effect_time;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerInitialHeight'] = $slideshow_internal_banner_initial_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerAutoHeight'] = $slideshow_internal_banner_auto_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerNavigationStyle'] = $slideshow_internal_navigation_style;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerBulletsPosition'] = $slideshow_internal_banner_bullets_position;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerLayout'] = $slideshow_internal_banner_layout;
  if ($slideshow_internal_banner_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerTouchSwipe'] = "on";
  } else {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerInit']['slideshowInternalBannerTouchSwipe'] = "off";
  }

  // Internal Banner Carousel
  $slideshow_internal_banner_carousel_initial_height = (int) theme_get_setting('rs_slideshow_internal_carousel_initial_height');
  $slideshow_internal_banner_carousel_bullets_position = theme_get_setting('rs_slideshow_internal_carousel_bullets_position');
  $slideshow_internal_banner_carousel_touch_swipe = theme_get_setting('rs_slideshow_internal_carousel_touch_swipe');

  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerCarouselInit']['carouselInternalBannerInitialHeight'] = $slideshow_internal_banner_carousel_initial_height;
  $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerCarouselInit']['carouselInternalBannerBulletsPosition'] = $slideshow_internal_banner_carousel_bullets_position;
  if ($slideshow_internal_banner_carousel_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerCarouselInit']['carouselInternalBannerTouchSwipe'] = "on";
  } else {
    $page['#attached']['drupalSettings']['basecore']['sliderRevolutionInternalBannerCarouselInit']['carouselInternalBannerTouchSwipe'] = "off";
  }

  // Products carousel
  $owl_products_autoplay = theme_get_setting('owl_products_autoplay');
  $owl_products_effect_time = (int) theme_get_setting('owl_products_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselProductsInit']['owlProductsAutoPlay'] = $owl_products_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselProductsInit']['owlProductsEffectTime'] = $owl_products_effect_time;

  // Albums carousel
  $owl_albums_autoplay = theme_get_setting('owl_albums_autoplay');
  $owl_albums_effect_time = (int) theme_get_setting('owl_albums_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselAlbumsInit']['owlAlbumsAutoPlay'] = $owl_albums_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselAlbumsInit']['owlAlbumsEffectTime'] = $owl_albums_effect_time;

  // Articles carousel
  $owl_articles_autoplay = theme_get_setting('owl_articles_autoplay');
  $owl_articles_effect_time = (int) theme_get_setting('owl_articles_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselArticlesInit']['owlArticlesAutoPlay'] = $owl_articles_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselArticlesInit']['owlArticlesEffectTime'] = $owl_articles_effect_time;

  // Testimonials carousel
  $owl_testimonials_autoplay = theme_get_setting('owl_testimonials_autoplay');
  $owl_testimonials_effect_time = (int) theme_get_setting('owl_testimonials_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselTestimonialsInit']['owlTestimonialsAutoPlay'] = $owl_testimonials_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselTestimonialsInit']['owlTestimonialsEffectTime'] = $owl_testimonials_effect_time;

  // Related Nodes carousel
  $owl_related_nodes_autoplay = theme_get_setting('owl_related_nodes_autoplay');
  $owl_related_nodes_effect_time = (int) theme_get_setting('owl_related_nodes_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselRelatedNodesInit']['owlRelatedNodesAutoPlay'] = $owl_related_nodes_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselRelatedNodesInit']['owlRelatedNodesEffectTime'] = $owl_related_nodes_effect_time;

  // Collections carousel
  $owl_collections_autoplay = theme_get_setting('owl_collections_autoplay');
  $owl_collections_effect_time = (int) theme_get_setting('owl_collections_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselCollectionsInit']['owlCollectionsAutoPlay'] = $owl_collections_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselCollectionsInit']['owlCollectionsEffectTime'] = $owl_collections_effect_time;

  // Team members carousel
  $owl_team_members_autoplay = theme_get_setting('owl_team_members_autoplay');
  $owl_team_members_effect_time = (int) theme_get_setting('owl_team_members_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['owlCarouselTeamMembersInit']['owlTeamMembersAutoPlay'] = $owl_team_members_autoplay;
  $page['#attached']['drupalSettings']['basecore']['owlCarouselTeamMembersInit']['owlTeamMembersEffectTime'] = $owl_team_members_effect_time;

  //In page slider
  $in_page_slider_effect = theme_get_setting('in_page_slider_effect');

  $page['#attached']['drupalSettings']['basecore']['flexsliderInPageInit']['inPageSliderEffect'] = $in_page_slider_effect;

  // Breaking news slider
  $breaking_effect = theme_get_setting('breaking_effect');
  $breaking_effect_time = (int) theme_get_setting('breaking_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['flexsliderBreakingSliderInit']['breakingEffect'] = $breaking_effect;
  $page['#attached']['drupalSettings']['basecore']['flexsliderBreakingSliderInit']['breakingEffectTime'] = $breaking_effect_time;

  // Flexslider main
  $flexslider_main_effect = theme_get_setting('flexslider_main_effect');
  $flexslider_main_effect_time = (int) theme_get_setting('flexslider_main_effect_time')*1000;

  $page['#attached']['drupalSettings']['basecore']['flexsliderMainInit']['slideshowEffect'] = $flexslider_main_effect;
  $page['#attached']['drupalSettings']['basecore']['flexsliderMainInit']['slideshowEffectTime'] = $flexslider_main_effect_time;

  // In page navigation offset
  $in_page_navigation_offset = (int) theme_get_setting('in_page_navigation_offset');
  $page['#attached']['drupalSettings']['basecore']['inPageNavigation']['inPageNavigationOffset'] = $in_page_navigation_offset;

  // Transparent Header Opacity
  $transparent_header_opacity = (int) theme_get_setting('transparent_header_opacity')/100;

  $page['#attached']['drupalSettings']['basecore']['transparentHeader']['transparentHeaderOpacity'] = $transparent_header_opacity;

  // Isotope Filters
  $isotope_filters_text_plain = (!empty(theme_get_setting('isotope_filters_text'))) ? Html::escape(theme_get_setting('isotope_filters_text')) : 'All';
  $isotope_filters_text = t($isotope_filters_text_plain, array(), array('context' => 'Isotope All filter text'));
  $isotope_layout_mode = theme_get_setting('isotope_layout_mode');

  $page['#attached']['drupalSettings']['basecore']['isotopeFiltersGridInit']['isotopeFiltersText'] = $isotope_filters_text;
  $page['#attached']['drupalSettings']['basecore']['isotopeFiltersGridInit']['isotopeLayoutMode'] = $isotope_layout_mode;

  // Slideout
  $slideout_side = theme_get_setting('slideout_side');
  $slideout_touch_swipe = theme_get_setting('slideout_touch_swipe');
  $page['#attached']['drupalSettings']['basecore']['slideoutInit']['slideoutSide'] = $slideout_side;
  if ($slideout_touch_swipe) {
    $page['#attached']['drupalSettings']['basecore']['slideoutInit']['slideoutTouchSwipe'] = true;
  } else {
    $page['#attached']['drupalSettings']['basecore']['slideoutInit']['slideoutTouchSwipe'] = false;
  }
}

function basecore_library_info_build() {
  $google_maps_key = Html::escape(theme_get_setting('google_maps_key'));
  if (!empty($google_maps_key)) {
    $google_maps_key_string = '&key='.$google_maps_key;
  } else {
    $google_maps_key_string = '';
  }
  $libraries = [];
  $libraries['google-maps-dynamic'] = [
    'version' => '3',
    'remote' => 'https://maps.googleapis.com/maps/api/js',
    'js' => [
      'https://maps.googleapis.com/maps/api/js?v=3'.$google_maps_key_string => [
        'scope' => ['footer'],
      ],
    ],
    'license' => [
      'name' => ['Google Terms of Service'],
      'url' => ['https://developers.google.com/maps/terms'],
    ],
  ];
  return $libraries;
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function basecore_preprocess_node(&$variables) {
  // Remove the "Add new comment" link on teasers or when the comment form is
  // displayed on the page.
  if ($variables['teaser'] || !empty($variables['content']['comments']['comment_form'])) {
    unset($variables['content']['links']['comment']['#links']['comment-add']);
  }

  if (isset($variables['node']->comment)) {
    $comment_count = $variables['node']->get('comment')->__get('comment_count');
    if ($comment_count) {
      $variables['comment_count'] = $comment_count;
    } else {
      $variables['comment_count'] = "0";
    }
  }

}

/**
 * Implements hook_preprocess_HOOK() for node--case-study--full.html.twig.
 */
function basecore_preprocess_node__case_study__full(&$variables) {
  $variables['#attached']['library'][] = 'basecore/node-case-study';
}

/**
 * Implements hook_preprocess_HOOK() for node--event.html.twig.
 */
function basecore_preprocess_node__event__full(&$variables) {
  $variables['#attached']['library'][] = 'basecore/node-event';
}

/**
 * Implements hook_preprocess_HOOK() for node--project.html.twig.
 */
function basecore_preprocess_node__project__full(&$variables) {
  $variables['#attached']['library'][] = 'basecore/node-project';
}

/**
 * Implements hook_preprocess_links().
 */
function basecore_preprocess_links(&$variables) {
  if (isset($variables['links']['node-readmore'])) {
    $variables['links']['node-readmore']['link']['#options']['attributes']['class'][] = 'mt-link-stylable';
  }
}

function basecore_preprocess_node__article(&$variables) {
  $variables['mt_setting']['reading_time'] = theme_get_setting('reading_time');
  $variables['mt_setting']['share_links'] = theme_get_setting('share_links');
  $variables['mt_setting']['print_button'] = theme_get_setting('print_button');
  $variables['mt_setting']['share_links_print_position'] = theme_get_setting('share_links_print_position');
  $variables['mt_setting']['font_resize'] = theme_get_setting('font_resize');
  $variables['mt_setting']['sticky_side'] = theme_get_setting('sticky_side');


  // Count the words of article in order to calculate the reading time
  $node_content = $variables['content'];
  $node_content = \Drupal::service('renderer')->render($node_content);
  $words = str_word_count(strip_tags($node_content));
  if (isset($variables['content']['comment'])) {
    $node_comments = $variables['content']['comment'];
    $node_comments = \Drupal::service('renderer')->render($node_comments);
    $words = $words - str_word_count(strip_tags($node_comments));
  }
  $variables['minutes'] = floor($words / 275);
}

function basecore_preprocess_node__mt_testimonial(&$variables) {
  $variables['#attached']['library'][] = 'basecore/node-testimonial';
}

/**
 * Implements hook_preprocess_HOOK() for node__mt_product.html.twig.
 */
function basecore_preprocess_node__mt_product__mt_teaser_compact(&$variables) {
  if (!empty($variables['elements']['field_mt_prd_highlight']['#object'])) {
    $file = File::load($variables['content']['field_mt_prd_highlight'][0]['#paragraph']->get('field_mt_highlight_image')->first()->getValue()['target_id']);
    $path = $file->getFileUri();
    $thumb_url = ImageStyle::load('mt_teaser_compact_medium')->buildUrl($path);
    $variables['highlight_image_styled_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
    $variables['highlight_image_alt'] = $variables['content']['field_mt_prd_highlight'][0]['#paragraph']->get('field_mt_highlight_image')->first()->getValue()['alt'];
    $variables['highlight_image_title'] = $variables['content']['field_mt_prd_highlight'][0]['#paragraph']->get('field_mt_highlight_image')->first()->getValue()['title'];
  } else {
    $variables['highlight_image_styled_url'] = "";
    $variables['highlight_image_alt'] = "";
    $variables['highlight_image_title'] = "";
  }
}

/**
 * Implements hook_preprocess_HOOK() for commerce_product_full.html.twig.
 */
function basecore_preprocess_commerce_product__full(&$variables) {
  /**
  * Add Custom Region with blocks in a Node
  */
  $node_regions = ['commerce_product_sidebar'];
  // Retrieve active theme
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  // For each region
  foreach ($node_regions as $key => $region) {
    // Load region blocks
    $blocks = \Drupal::entityTypeManager()->getStorage('block')->loadByProperties([
      'theme' => $theme,
      'region' => $region,
    ]);
    // Assign viewable blocks and their settings to $build
    $build = array();
    foreach ($blocks as $key => $block) {
      if ($block->access('view')) {
        $builder = \Drupal::entityTypeManager()->getViewBuilder('block');
        $build[$key] = $builder->view($block, 'block');
      }
    }
    $variables[$region] = $build;
  }
}

/**
 * Implements hook_preprocess_HOOK() for node__mt_post.html.twig.
 */
function basecore_preprocess_node__mt_post__mt_compact_list_item(&$variables) {
  $variables['posted_ago'] = \Drupal::service('date.formatter')
    ->formatInterval(REQUEST_TIME - $variables['node']
        ->getCreatedTime(), $granularity = 1);
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function basecore_preprocess_block(&$variables) {
  $plugin_id = $variables['plugin_id'];

  // add space bottom to particular blocks.
  $spaced_blocks = [
    'field_tags',
    'field_featured_image',
    'views_block',
  ];

  // Very loose string contains substring in array type check.
  // If too loose, we can make the above array more specific.
  if (str_replace($spaced_blocks, '', strtolower($plugin_id)) !== strtolower($plugin_id)) {
    $variables['attributes']['class'][] = 'mt-4 mb-5';
  }

  // Add a clearfix class to blocks.
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-prd-buy-link.html.twig.
 */
function basecore_preprocess_field__node__field_mt_prd_buy_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button');
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-srv-link.html.twig.
 */
function basecore_preprocess_field__node__field_mt_srv_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button');
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-tst-testimonial-link.html.twig.
 */
function basecore_preprocess_field__node__field_mt_tst_testimonial_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button');
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--paragraph--field-mt-highlight-link.html.twig.
 */
function basecore_preprocess_field__paragraph__field_mt_highlight_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button');
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-event--link.html.twig.
 */
function basecore_preprocess_field__node__field_event__link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'text-center';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['content']['#options']['attributes']['class'][] = 'mt-button mt-button--external-link';
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-case-study--client-link.html.twig.
 */
function basecore_preprocess_field__node__field_case_study__client_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'text-center';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['content']['#options']['attributes']['class'][] = 'mt-button mt-button--link mt-button--external-link';
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-project--client-link.html.twig.
 */
function basecore_preprocess_field__node__field_project__client_link(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'text-center';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['content']['#options']['attributes']['class'][] = 'mt-button mt-button--link mt-button--external-link';
  }
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-prd-specification.html.twig.
 */
function basecore_preprocess_paragraph__mt_prd_specification(&$variables) {
  $variables['attributes']['class'][] = 'mt-style-custom-all';
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-card-awesome-button.html.twig.
 */
function basecore_preprocess_field__paragraph__field_mt_card_awesome_button(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button');
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-srv-link.html.twig.
 */
function basecore_preprocess_field__block_content__field_mt_hero_v2_action(&$variables) {
  if (!$variables['multiple']) {
    $variables['attributes']['class'][] = 'mt-button';
  }
  foreach ($variables['items'] as $delta => &$item) {
    $item['attributes']->setAttribute('class', 'mt-button d-sm-inline-block mb-3');
    if ($delta > 0) {
      $item['attributes']->setAttribute('class', 'mt-button mt-button--outline d-sm-inline-block mb-3');
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-google-maps.html.twig.
 */
function basecore_preprocess_field__block_content__mt_google_maps(&$variables) {
  $variables['#attached']['library'][] = 'basecore/google-maps-init';
  if (!empty($variables['element']['#object']->get('field_mt_map_zoom')->first())) {
    $variables['field_mt_map_zoom_value'] = $variables['element']['#object']->get('field_mt_map_zoom')->first()->getValue()['value'];
  }
  $paragraphs = $variables['element']['#items']->referencedEntities();
  if (!empty($paragraphs)) {
    $locations = "";
    foreach ($paragraphs as $key => $paragraph) {
      $location_latitude = $paragraph->toArray()['field_mt_ml_latitude'][0]['value'];
      $location_longitude = $paragraph->toArray()['field_mt_ml_longitude'][0]['value'];
      $location_name = $paragraph->toArray()['field_mt_ml_location_name'][0]['value'];
      $locations = "["."\"$location_name\", ".$location_latitude.", ".$location_longitude.", ".$key."]".", ".$locations;
    }
    $locations = trim($locations);
    $locations = rtrim($locations, ",");
    $variables['map_locations'] = '[' . $locations .']';
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--field-mt-if-item.html.twig.
 */
function basecore_preprocess_field__field_mt_if_item(&$variables) {
  if (!empty($variables['element']['#object']->get('field_mt_if_columns')->first())) {
    $variables['field_mt_if_columns_value'] = $variables['element']['#object']->get('field_mt_if_columns')->first()->getValue()['value'];
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-fronpage-cover.html.twig.
 */
function basecore_preprocess_field__block_content__mt_frontpage_cover(&$variables) {
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_background_image')->first())) {
    $variables['background_image_uri'] = $variables['element']['#object']->get('field_mt_fpcb_background_image')->first()->entity->getFileUri();
  }
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_title')->first())) {
    $variables['field_mt_fpcb_title_value'] = $variables['element']['#object']->get('field_mt_fpcb_title')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_block_height')->first())) {
    $variables['field_mt_fpcb_block_height_value'] = $variables['element']['#object']->get('field_mt_fpcb_block_height')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_subtitle')->first())) {
    $variables['field_mt_fpcb_subtitle_value'] = $variables['element']['#object']->get('field_mt_fpcb_subtitle')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_badge')->first())) {
    $variables['field_mt_fpcb_badge_value'] = $variables['element']['#object']->get('field_mt_fpcb_badge')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_fpcb_cta_button')->first())) {
    $cta_button_item = $variables['element']['#object']->get('field_mt_fpcb_cta_button')->first();
    $variables['field_mt_fpcb_cta_button_uri'] = Url::fromUri($cta_button_item->getValue()['uri']);
    $variables['field_mt_fpcb_cta_button_text'] = $cta_button_item->getValue()['title'];
  }
  $paragraphs = $variables['element']['#object']->get('field_mt_fpcb_image_button')->referencedEntities();
  if (!empty($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph) {
      $image_button_image = $paragraph->toArray()['field_mt_image_button_image'];
      $image_button_link = $paragraph->toArray()['field_mt_image_button_link'];
      if (!empty($image_button_image[0])) {
        $file = File::load($image_button_image[0]['target_id']);
        $path = $file->getFileUri();
        $variables['image_buttons'][$key]['image_button_image_url'] = $path;
        $variables['image_buttons'][$key]['image_button_image_alt'] = $image_button_image[0]['alt'];
      }
      if (!empty($image_button_link[0])) {
        $variables['image_buttons'][$key]['image_button_link_url'] = Url::fromUri($image_button_link[0]['uri']);
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for block--block-type--mt-hero-promo.html.twig.
 */
function basecore_preprocess_block__block_type__mt_hero_promo(&$variables) {
  $variables['#attached']['library'][] = 'basecore/flexslider-main-init';
  $paragraphs = $variables['content']['#block_content']->get('field_mt_hp_banner')->referencedEntities();
  $variables['slider_enabled'] = false;
  if (!empty($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph) {
      $check_access = true;
      $entity = $paragraph;
      $view_mode = "default";
      $langcode = NULL;
      $build = [];
      $access = $check_access ? $entity->access('view', NULL, TRUE) : AccessResult::allowed();
      if ($access->isAllowed()) {
        $build = \Drupal::entityTypeManager()
          ->getViewBuilder($entity->getEntityTypeId())
          ->view($entity, $view_mode, $langcode);
      }
      CacheableMetadata::createFromRenderArray($build)
        ->merge(CacheableMetadata::createFromObject($entity))
        ->merge(CacheableMetadata::createFromObject($access))
        ->applyTo($build);
      $variables['items'][$key]['banner_item'] = $build;

      $banner_item_promo = $paragraph->toArray()['field_mt_banner_promo'];
      if (!empty($banner_item_promo[0])) {
        $variables['items'][$key]['banner_item_promo_value'] = $banner_item_promo[0]['value'];
      } else {
        $variables['items'][$key]['banner_item_promo_value'] = false;
      }
      if ($variables['items'][$key]['banner_item_promo_value']) {
        $variables['slider_enabled'] = true;
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-bg-image.html.twig.
 */
function basecore_preprocess_field__block_content__field_mt_bg_image_block(&$variables) {
  if (!empty($variables['element']['#object']->get('field_mt_bg_image')->first())) {
    $variables['background_image_uri'] = $variables['element']['#object']->get('field_mt_bg_image')->first()->entity->getFileUri();
  }
  if (!empty($variables['element']['#object']->get('field_mt_bg_image_opacity')->first())) {
    $variables['bg_image_overlay_opacity'] = $variables['element']['#object']->get('field_mt_bg_image_opacity')->first()->getValue()['value']/100;
  }
  if (!empty($variables['element']['#object']->get('field_mt_bg_image_color')->first())) {
    $variables['bg_image_overlay_color'] = $variables['element']['#object']->get('field_mt_bg_image_color')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_bg_image_layout_mode')->first())) {
    $variables['bg_image_layout_mode'] = $variables['element']['#object']->get('field_mt_bg_image_layout_mode')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_bg_image_positioning')->first()) and $variables['element']['#object']->get('field_mt_bg_image_positioning')->first()->getValue()['value'] == "1") {
    $variables['field_mt_bg_image_positioning_value'] = "background-image--attachment-fixed";
  } else {
    $variables['field_mt_bg_image_positioning_value'] = "background-image--attachment-scroll";
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-background-video.html.twig.
 */
function basecore_preprocess_field__block_content__mt_background_video(&$variables) {
  if (!empty($variables['element']['#object']->get('field_mt_bv_video_mp4')->first())) {
    $variables['background_video_mp4_uri'] = $variables['element']['#object']->get('field_mt_bv_video_mp4')->first()->entity->getFileUri();
  }
  if (!empty($variables['element']['#object']->get('field_mt_bv_video_webm')->first())) {
    $variables['background_video_webm_uri'] = $variables['element']['#object']->get('field_mt_bv_video_webm')->first()->entity->getFileUri();
  }
  if (!empty($variables['element']['#object']->get('field_mt_bv_poster')->first())) {
    $variables['background_video_poster_uri'] = $variables['element']['#object']->get('field_mt_bv_poster')->first()->entity->getFileUri();
  }
  if (!empty($variables['element']['#object']->get('field_mt_bv_overlay_opacity')->first())) {
    $variables['background_video_overlay_opacity'] = $variables['element']['#object']->get('field_mt_bv_overlay_opacity')->first()->getValue()['value']/100;
  }
  if (!empty($variables['element']['#object']->get('field_mt_bv_overlay_color')->first())) {
    $variables['background_video_overlay_color'] = $variables['element']['#object']->get('field_mt_bv_overlay_color')->first()->getValue()['value'];
  }
  if (!empty($variables['element']['#object']->get('field_mt_bv_layout_mode')->first())) {
    $variables['background_video_layout_mode'] = $variables['element']['#object']->get('field_mt_bv_layout_mode')->first()->getValue()['value'];
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-image-with-overlaid-text.html.twig.
 */
function basecore_preprocess_field__block_content__mt_image_with_overlaid_text(&$variables) {
  if (!empty($variables['element']['#object']->get('field_mt_iwot_image')->first())) {
    $variables['background_image_uri'] = $variables['element']['#object']->get('field_mt_iwot_image')->first()->entity->getFileUri();
  } else {
    $variables['background_image_uri'] = false;
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-image--article.html.twig.
 */
function basecore_preprocess_field__node__field_image__article(&$variables) {
  $variables['created_date'] = $variables['element']['#object']->getCreatedTime();
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-fancy-linked-images.html.twig.
 */
function basecore_preprocess_field__block_content__mt_fancy_linked_images(&$variables) {
  $paragraphs = $variables['element']['#items']->referencedEntities();
  if (!empty($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph) {
      $fancy_image = $paragraph->toArray()['field_mt_fli_image'];
      if (!empty($fancy_image[0])) {
        $file = File::load($fancy_image[0]['target_id']);
        $path = $file->getFileUri();
        $thumb_url = ImageStyle::load('mt_fli')->buildUrl($path);
        $variables['items'][$key]['fancy_image_styled_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
      } else {
        $variables['items'][$key]['fancy_image_styled_url'] = "";
      }
    }
  }

  $variables['#attached']['html_head'][] = [
    // The data.
    [
      '#type' => 'html_tag',
      // The HTML tag to add, in this case a  tag.
      '#tag' => 'style',
      // The value of the HTML tag.
      '#value' => '.clip-pentagon-container { -webkit-clip-path: url("#clip-pentagon"); clip-path: url("#clip-pentagon"); } .clip-pentagon { -webkit-clip-path: url("#clip-pentagon"); clip-path: url("#clip-pentagon"); } .clip-circle-container { -webkit-clip-path: url("#clip-circle"); clip-path: url("#clip-circle"); } .clip-circle { -webkit-clip-path: url("#clip-circle"); clip-path: url("#clip-circle"); }',
    ],
    // A key, to make it possible to recognize this HTML  element when altering.
    'inline-css-for-firefox'
  ];
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-typing-animation.html.twig.
 */
function basecore_preprocess_field__block_content__mt_typing_animation(&$variables) {
  $variables['#attached']['library'][] = 'basecore/typedjs-init';
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-banner.html.twig.
 */
function basecore_preprocess_paragraph__mt_banner(&$variables) {
  $banner_image = $variables['paragraph']->get('field_mt_banner_image');
  if (!empty($banner_image[0])) {
    $path = $banner_image[0]->entity->getFileUri();
    if ($variables['paragraph']->get('field_mt_banner_promo')->value == "1") {
      $thumb_url = ImageStyle::load('mt_hero_promo')->buildUrl($path);
    } else {
      $thumb_url = ImageStyle::load('mt_hero_promo_wide')->buildUrl($path);
    }
    $variables['field_mt_banner_image_styled_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
  } else {
    $variables['field_mt_banner_image_styled_url'] = "";
  }
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-detailed-feature.html.twig.
 */
function basecore_preprocess_paragraph__mt_detailed_feature(&$variables) {
  $background_image = $variables['paragraph']->get('field_mt_detailed_feature_image');
  if (!empty($background_image[0])) {
    $path = $background_image[0]->entity->getFileUri();
    $thumb_url = ImageStyle::load('mt_detailed_feature')->buildUrl($path);
    $variables['field_mt_detailed_feature_image_styled_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
  } else {
    $variables['field_mt_detailed_feature_image_styled_url'] = "";
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--block-content--mt-main-slideshow.html.twig.
 */
function basecore_preprocess_field__block_content__mt_main_slideshow(&$variables) {
  $transparent_header_state = theme_get_setting('transparent_header_state');
  if ($transparent_header_state) {
    $variables['#attached']['library'][] = 'basecore/transparent-header';
  }
  $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $paragraphs = $variables['element']['#items']->referencedEntities();
  if (!empty($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph) {
      $slide_image = $paragraph->toArray()['field_mt_ms_slide_image'];
      $slide_caption = $paragraph->toArray()['field_mt_ms_slide_caption'];
      $slide_caption_color = $paragraph->toArray()['field_mt_ms_slide_caption_color'];
      $slide_caption_opacity = $paragraph->toArray()['field_mt_ms_slide_caption_opac'];
      $slide_title = $paragraph->toArray()['field_mt_ms_slide_title'];
      $slide_links = $paragraph->toArray()['field_mt_ms_slide_link'];
      $slide_image = $paragraph->toArray()['field_mt_ms_slide_image'];
      $slide_vimeo_id = $paragraph->toArray()['field_mt_ms_slide_vimeo_id'];
      $slide_youtube_id = $paragraph->toArray()['field_mt_ms_slide_youtube_id'];
      $slide_video_volume = $paragraph->toArray()['field_mt_ms_slide_volume'];

      if (!empty($slide_image[0])) {
        $file = File::load($slide_image[0]['target_id']);
        $path = $file->getFileUri();
        if (!empty($variables['element']['#object']->get('field_mt_main_slideshow_layout')->first()) && $variables['element']['#object']->get('field_mt_main_slideshow_layout')->first()->getValue()['value'] == "fullwidth") {
          $thumb_url = ImageStyle::load('mt_slideshow_full_width')->buildUrl($path);
          $variables['items'][$key]['slide_image_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
        } else {
          $thumb_url = ImageStyle::load('mt_slideshow_fullscreen')->buildUrl($path);
          $variables['items'][$key]['slide_image_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
        }
        $variables['items'][$key]['slide_image_alt'] = $slide_image[0]['alt'];
      } else {
        $variables['items'][$key]['slide_image_url'] = "";
        $variables['items'][$key]['slide_image_alt'] = "";
      }
      if ($paragraph->hasTranslation($current_language_id)) {
        $variables['items'][$key]['slide_caption'] = $paragraph->getTranslation($current_language_id)->get('field_mt_ms_slide_caption')->value;
      } elseif (!empty($slide_caption[0])) {
        $variables['items'][$key]['slide_caption'] = $slide_caption[0]['value'];
      } else {
        $variables['items'][$key]['slide_caption'] = false;
      }
      if (!empty($slide_caption_color[0])) {
        $variables['items'][$key]['slide_caption_color'] = $slide_caption_color[0]['value'];
      } else {
        $variables['items'][$key]['slide_caption_color'] = "region--dark-background";
      }
      if (!empty($slide_caption_opacity[0])) {
        $variables['items'][$key]['slide_caption_opacity'] = $slide_caption_opacity[0]['value']/100;
      } else {
        $variables['items'][$key]['slide_caption_opacity'] = 0;
      }
      if ($paragraph->hasTranslation($current_language_id)) {
        $variables['items'][$key]['slide_title'] = $paragraph->getTranslation($current_language_id)->get('field_mt_ms_slide_title')->value;
      } elseif (!empty($slide_title[0])) {
        $variables['items'][$key]['slide_title'] = $slide_title[0]['value'];
      } else {
        $variables['items'][$key]['slide_title'] = false;
      }
      if (!empty($slide_links[0])) {
        $variables['items'][$key]['slide_first_link_url'] = Url::fromUri($slide_links[0]['uri']);
        $variables['items'][$key]['slide_first_link_title'] = $slide_links[0]['title'];
        foreach ($slide_links as $slide_link_key => $slide_link) {
          $variables['items'][$key]['slide_links'][$slide_link_key]['slide_link_url'] = Url::fromUri($slide_links[$slide_link_key]['uri']);
          if ($paragraph->hasTranslation($current_language_id)) {
            $variables['items'][$key]['slide_links'][$slide_link_key]['slide_link_title'] = $paragraph->getTranslation($current_language_id)->get('field_mt_ms_slide_link')[$slide_link_key]->title;
          } else {
            $variables['items'][$key]['slide_links'][$slide_link_key]['slide_link_title'] = $slide_links[$slide_link_key]['title'];
          }
        }
      } else {
        $variables['items'][$key]['slide_first_link_url'] = false;
        $variables['items'][$key]['slide_first_link_title'] = false;
      }
      if (!empty($slide_vimeo_id[0])) {
        $variables['items'][$key]['slide_vimeo_id'] = $slide_vimeo_id[0]['value'];
      } else {
        $variables['items'][$key]['slide_vimeo_id'] = false;
      }
      if (!empty($slide_youtube_id[0])) {
        $variables['items'][$key]['slide_youtube_id'] = $slide_youtube_id[0]['value'];
      } else {
        $variables['items'][$key]['slide_youtube_id'] = false;
      }
      if (!empty($slide_video_volume[0]) and $slide_video_volume[0]['value'] != 0) {
        $variables['items'][$key]['slide_video_volume'] = $slide_video_volume[0]['value'];
      } else {
        $variables['items'][$key]['slide_video_volume'] = "mute";
      }
    }
  }
  if (!empty($variables['element']['#object']->get('field_mt_main_slideshow_layout')->first()) && $variables['element']['#object']->get('field_mt_main_slideshow_layout')->first()->getValue()['value'] == "fullwidth") {
    $variables['field_mt_main_slideshow_layout_value'] = "auto";
    $variables['field_mt_main_slideshow_autoheight'] = "off";
  } else {
    $variables['field_mt_main_slideshow_layout_value'] = "fullscreen";
    $variables['field_mt_main_slideshow_autoheight'] = "on";
  }
  if (!empty($variables['element']['#object']->get('field_mt_ms_initial_height')->first())) {
    $variables['field_mt_ms_initial_height_value'] = (int) $variables['element']['#object']->get('field_mt_ms_initial_height')->first()->getValue()['value'];
  } else {
    $variables['field_mt_ms_initial_height_value'] = 650;
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_effect')->first())) {
    $variables['field_mt_ms_effect_value'] = $variables['element']['#object']->get('field_mt_ms_effect')->first()->getValue()['value'];
  } else {
    $variables['field_mt_ms_effect_value'] = "fade";
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_effect_duration')->first())) {
    $variables['field_mt_ms_effect_duration_value'] = (int) $variables['element']['#object']->get('field_mt_ms_effect_duration')->first()->getValue()['value']*1000;
  } else {
    $variables['field_mt_ms_effect_duration_value'] = 9000;
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_touch_swipe_nav')->first()) and $variables['element']['#object']->get('field_mt_ms_touch_swipe_nav')->first()->getValue()['value'] == "1") {
    $variables['field_mt_ms_touch_swipe_nav_value'] = "on";
  } else {
    $variables['field_mt_ms_touch_swipe_nav_value'] = "off";
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_ignore_header_height')->first()) and $variables['element']['#object']->get('field_mt_ms_ignore_header_height')->first()->getValue()['value'] == "1") {
    $variables['field_mt_ms_ignore_header_height_value'] = ".header-container, .toolbar-tray-horizontal";
  } else {
    $variables['field_mt_ms_ignore_header_height_value'] = ".toolbar-tray-horizontal";
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_navigation_style')->first()) and $variables['element']['#object']->get('field_mt_ms_navigation_style')->first()->getValue()['value'] == "bullets") {
    $variables['field_mt_ms_bullets_enable'] = true;
    $variables['field_mt_ms_tabs_enable'] = false;
  } elseif (!empty($variables['element']['#object']->get('field_mt_ms_navigation_style')->first()) and $variables['element']['#object']->get('field_mt_ms_navigation_style')->first()->getValue()['value'] == "titles_carousel") {
    $variables['field_mt_ms_bullets_enable'] = false;
    $variables['field_mt_ms_tabs_enable'] = true;
  } else {
    $variables['field_mt_ms_bullets_enable'] = false;
    $variables['field_mt_ms_tabs_enable'] = false;
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_bullets_position')->first())) {
    $variables['field_mt_ms_bullets_position_value'] = $variables['element']['#object']->get('field_mt_ms_bullets_position')->first()->getValue()['value'];
  } else {
    $variables['field_mt_ms_bullets_position_value'] = "center";
  }

  if (!empty($variables['element']['#object']->get('field_mt_ms_background_opacity')->first())) {
    $variables['field_mt_ms_background_opacity_value'] = (int) $variables['element']['#object']->get('field_mt_ms_background_opacity')->first()->getValue()['value']/100;
  } else {
    $variables['field_mt_ms_background_opacity_value'] = 0;
  }
}

/**
 * Implements hook_preprocess_HOOK() for commerce-cart-block.html.twig.
 */
function basecore_preprocess_commerce_cart_block(&$variables) {
  $variables['links']['0']['#title'] = "Go to cart";
  $variables['links']['0']['#options']['attributes']['class'][] = 'mt-button d-block';
}

/**
 * Implements hook_preprocess_HOOK() for field--field-mt-video-gallery-slides.html.twig.
 */
function basecore_preprocess_field__field_mt_video_gallery_slides(&$variables) {
  $paragraphs = $variables['element']['#items']->referencedEntities();
  if (!empty($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph) {
      $vimeo_id = $paragraph->toArray()['field_mt_vgs_vimeo_id'];
      $youtube_id = $paragraph->toArray()['field_mt_vgs_youtube_id'];
      $volume = $paragraph->toArray()['field_mt_vgs_volume'];
      $slide_title = $paragraph->toArray()['field_mt_vgs_slide_title'];
      $thumbnail = $paragraph->toArray()['field_mt_vgs_thumbnail'];
      if (!empty($vimeo_id[0])) {
        $variables['items'][$key]['vimeo_id'] = $vimeo_id[0]['value'];
      } else {
        $variables['items'][$key]['vimeo_id'] = false;
      }
      if (!empty($youtube_id[0])) {
        $variables['items'][$key]['youtube_id'] = $youtube_id[0]['value'];
      } else {
        $variables['items'][$key]['youtube_id'] = false;
      }
      if (!empty($volume[0]) and $volume[0]['value'] != 0) {
        $variables['items'][$key]['volume'] = $volume[0]['value'];
      } else {
        $variables['items'][$key]['volume'] = "mute";
      }
      if (!empty($slide_title[0])) {
        $variables['items'][$key]['slide_title'] = $slide_title[0]['value'];
      } else {
        $variables['items'][$key]['slide_title'] = false;
      }
      if (!empty($thumbnail[0])) {
        $file = File::load($thumbnail[0]['target_id']);
        $path = $file->getFileUri();
        $thumb_url = ImageStyle::load('mt_video_gallery_thumbnail')->buildUrl($path);
        $main_url = ImageStyle::load('mt_slideshow_boxed')->buildUrl($path);
        $variables['items'][$key]['thumbnail_thumb_styled_uri'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
        $variables['items'][$key]['thumbnail_main_styled_uri'] = \Drupal::service('file_url_generator')->transformRelative($main_url);
        $variables['items'][$key]['thumbnail_alt'] = $thumbnail[0]['alt'];
      } else {
        $variables['items'][$key]['thumbnail_thumb_styled_uri'] = "";
        $variables['items'][$key]['thumbnail_main_styled_uri'] = "";
        $variables['items'][$key]['thumbnail_alt'] = "";
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-srv-banner-image.html.twig.
 */
function basecore_preprocess_field__node__field_mt_srv_banner_image(&$variables) {
  $variables['mt_setting']['rs_slideshow_internal_effect'] = theme_get_setting('rs_slideshow_internal_effect');
}

/**
 * Implements hook_preprocess_HOOK() for field--node--field-mt-prd-banner-carousel.html.twig.
 */
function basecore_preprocess_field__node__field_mt_prd_banner_carousel(&$variables) {
  $variables['mt_setting']['rs_slideshow_internal_carousel_effect'] = theme_get_setting('rs_slideshow_internal_carousel_effect');
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig.
 */
function basecore_preprocess_pager(&$variables) {
  $variables['#attached']['library'][] = 'basecore/pager';
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig for mt_products view
 */
function basecore_preprocess_pager__mt_products(&$variables) {
  global $pager_total_items;
  $variables['total_items_count'] = isset($pager_total_items[0]) ? $pager_total_items[0] : 0;
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig for mt_products view
 */
function basecore_preprocess_pager__mt_products_list(&$variables) {
  global $pager_total_items;
  $variables['total_items_count'] = isset($pager_total_items[0]) ? $pager_total_items[0] : 0;
}

/**
 * Implements hook_preprocess_HOOK() for pager.html.twig for mt_product_category view
 */
function basecore_preprocess_pager__mt_product_category(&$variables) {
  global $pager_total_items;
  $variables['total_items_count'] = isset($pager_total_items[0]) ? $pager_total_items[0] : 0;
}

/**
 * Implements hook_preprocess_HOOK() for infinite_scroll_pager
 */
function basecore_preprocess_views_infinite_scroll_pager(&$variables) {
  $variables['#attached']['library'][] = 'basecore/infinite-scroll-pager';
}

/**
 * Implements hook_preprocess_HOOK() for views-mini-pager.html.twig.
 */
function basecore_preprocess_views_mini_pager(&$variables) {
  $variables['#attached']['library'][] = 'basecore/mini-pager';
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function basecore_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-highlight.html.twig
 */
function basecore_preprocess_paragraph__mt_highlight(&$variables) {
  $variables['#attached']['library'][] = 'basecore/highlight';
  $variables['#attached']['library'][] = 'basecore/magnific-popup-field-highlight-image-init';
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-highlight--mt-teaser.html.twig
 */
function basecore_preprocess_paragraph__mt_highlight__mt_teaser(&$variables) {
  $variables['#attached']['library'][] = 'basecore/highlight';
}

/**
 * Implements hook_preprocess_HOOK() for paragraph--mt-highlight--mt-teaser-tile.html.twig
 */
function basecore_preprocess_paragraph__mt_highlight__mt_teaser_tile(&$variables) {
  $variables['#attached']['library'][] = 'basecore/highlight';
  $image = $variables['paragraph']->get('field_mt_highlight_image');
  $image_fit = $variables['paragraph']->get('field_mt_highlight_image_fit')->value;
  if (!empty($image[0])) {
    $path = $image[0]->entity->getFileUri();
    $thumb_url = ImageStyle::load('mt_metro_tile_square')->buildUrl($path);
    $variables['field_mt_highlight_image_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
    if ($image_fit == "mt-image-fit-contain") {
      $variables['field_mt_highlight_image_url'] = \Drupal::service('file_url_generator')->generateAbsoluteString($path);
    }
  } else {
    $variables['field_mt_highlight_image_url'] = "";
  }
}

/**
 * Implements template_preprocess_views_view()
 */
function basecore_preprocess_views_view(&$variables){
  $variables['more']['#options']['attributes']['class'][] = 'mt-link-stylable';
  if (!empty($variables["header"]) && !empty($variables["header"]["add_content_by_bundle"])) {
    $variables["header"]["add_content_by_bundle"]['#options']['attributes']['class'][] = 'mt-button mt-button--outline mb-5';
  }
}

/**
 * Implements hook_preprocess_HOOK() for products grid view.
 */
function basecore_preprocess_views_view__mt_products(&$variables) {
  $mt_grid_route = 'view.'.$variables['id'].'.'.$variables['display_id'];
  $mt_list_route = 'view.'.$variables['id'].'_list'.'.'.$variables['display_id'];

  $route_provider = \Drupal::service('router.route_provider');
  if ( count($route_provider->getRoutesByNames([$mt_grid_route])) >= 1) {
    $mt_grid_route_exists = true;
  } else {
    $mt_grid_route_exists = false;
  }
  if ( count($route_provider->getRoutesByNames([$mt_list_route])) >= 1) {
    $mt_list_route_exists = true;
  } else {
    $mt_list_route_exists = false;
  }
  $variables['mt_grid_route'] = $mt_grid_route;
  $variables['mt_grid_route_exists'] = $mt_grid_route_exists;
  $variables['mt_list_route'] = $mt_list_route;
  $variables['mt_list_route_exists'] = $mt_list_route_exists;
}

/**
 * Implements hook_preprocess_HOOK() for recent comments views.
 */
function basecore_preprocess_views_view_unformatted__mt_recent_comments(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-recent-comments';
}

/**
 * Implements hook_preprocess_HOOK() for products masonry layout views.
 */
function basecore_preprocess_views_view_list__mt_products_masonry(&$variables) {
  $variables['#attached']['library'][] = 'basecore/isotope-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for products carousel views.
 */
function basecore_preprocess_views_view_list__mt_products_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-products-init';
}

/**
 * Implements hook_preprocess_HOOK() for product tags views block.
 */
function basecore_preprocess_views_view_unformatted__mt_product_tags(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-product-tags';
}

/**
 * Implements hook_preprocess_HOOK() for breaking slider views.
 */
function basecore_preprocess_views_view_list__mt_posts_breaking(&$variables) {

  $variables['#attached']['library'][] = 'basecore/flexslider-breaking-slider-init';
}

/**
 * Implements hook_preprocess_HOOK() for team members grid views.
 */
function basecore_preprocess_views_view_list__mt_team_members_grid(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-promoted-items';
  $variables['#attached']['library'][] = 'basecore/view-team-members-grid';
  $variables['#attached']['library'][] = 'basecore/view-team-members-grid-2';
}

/**
 * Implements hook_preprocess_HOOK() for team members masonry views.
 */
function basecore_preprocess_views_view_list__mt_team_members_masonry(&$variables) {
  $variables['#attached']['library'][] = 'basecore/team-members-masonry-init';
}

/**
 * Implements hook_preprocess_HOOK() for team members carousel views.
 */
function basecore_preprocess_views_view_list__mt_team_members_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-team-members-init';
}

/**
 * Implements hook_preprocess_HOOK() for related nodes carousel views.
 */
function basecore_preprocess_views_view_list__mt_related_nodes_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-related-nodes-init';
}

/**
 * Implements hook_preprocess_HOOK() for related nodes carousel views.
 */
function basecore_preprocess_views_view_list__mt_commerce_related_products(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-related-nodes-init';
}

/**
 * Implements hook_preprocess_HOOK() for related nodes carousel views.
 */
function basecore_preprocess_views_view_list__mt_commerce_recommended_products(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-related-nodes-init';
}

/**
 * Implements hook_preprocess_HOOK() for collections carousel views.
 */
function basecore_preprocess_views_view_list__mt_collections_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-collections-init';
  $variables['#attached']['library'][] = 'basecore/view-collections-image-overlay';
}

/**
 * Implements hook_preprocess_HOOK() for collections grid views.
 */
function basecore_preprocess_views_view_list__mt_collections_grid(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-collections-grid';
  $variables['#attached']['library'][] = 'basecore/view-collections-image-overlay';
}

/**
 * Implements hook_preprocess_HOOK() for albums carousel views.
 */
function basecore_preprocess_views_view_list__mt_albums_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-albums-init';
}

/**
 * Implements hook_preprocess_HOOK() for popular tags views.
 */
function basecore_preprocess_views_view_unformatted__mt_popular_tags(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-popular-taxonomy';
}

/**
* Implements hook_preprocess_HOOK() for articles list 2 views.
*/
function basecore_preprocess_views_view_unformatted__mt_articles_list_2(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-articles-list-2';
}

/**
 * Implements hook_preprocess_HOOK() for articles carousel views.
 */
function basecore_preprocess_views_view_list__mt_articles_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-articles-init';
}

/**
 * Implements hook_preprocess_HOOK() for latest items views.
 */
function basecore_preprocess_views_view_list__mt_latest(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-latest-items';
}

/**
 * Implements hook_preprocess_HOOK() for full width slideshow.
 */
function basecore_preprocess_views_view_list__mt_posts_slideshow_full_width__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_fullwidth_effect'] = theme_get_setting('rs_slideshow_fullwidth_effect');
  $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
  foreach ($variables['rows'] as $key => $row) {
    if ($variables['rows'][$key]['content']['#row']->_entity->hasTranslation($current_language_id)) {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTranslation($current_language_id)->getTitle();
    } else {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTitle();
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for full screen slideshow.
 */
function basecore_preprocess_views_view_list__mt_posts_slideshow_full_screen__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_fullscreen_effect'] = theme_get_setting('rs_slideshow_fullscreen_effect');
  //Load transparent-header library
  $transparent_header_state = theme_get_setting('transparent_header_state');
  if ($transparent_header_state) {
    $variables['#attached']['library'][] = 'basecore/transparent-header';
  }
  $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
  foreach ($variables['rows'] as $key => $row) {
    if ($variables['rows'][$key]['content']['#row']->_entity->hasTranslation($current_language_id)) {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTranslation($current_language_id)->getTitle();
    } else {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTitle();
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for boxed width slideshow.
 */
function basecore_preprocess_views_view_list__mt_posts_slideshow_boxed_width__block(&$variables) {
  $variables['mt_setting']['rs_slideshow_boxedwidth_effect'] = theme_get_setting('rs_slideshow_boxedwidth_effect');
  $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
  foreach ($variables['rows'] as $key => $row) {
    if ($variables['rows'][$key]['content']['#row']->_entity->hasTranslation($current_language_id)) {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTranslation($current_language_id)->getTitle();
    } else {
      $variables['rows'][$key]['title'] = $variables['rows'][$key]['content']['#row']->_entity->getTitle();
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for grid isotope layout.
 */
function basecore_preprocess_views_view_list__mt_isotope(&$variables) {
  $variables['#attached']['library'][] = 'basecore/isotope-filters-grid-init';
  $variables['#attached']['library'][] = 'basecore/view-promoted-items';
}

/**
 * Implements hook_preprocess_HOOK() for testimonials grid views.
 */
function basecore_preprocess_views_view_list__mt_testimonials_grid(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-testimonials-grid-2';
}

/**
 * Implements hook_preprocess_HOOK() for testimonials carousel views.
 */
function basecore_preprocess_views_view_list__mt_testimonials_carousel(&$variables) {
  $variables['#attached']['library'][] = 'basecore/owl-carousel-testimonials-init';
}

/**
 * Implements hook_preprocess_HOOK() for testimonials list views.
 */
function basecore_preprocess_views_view_list__mt_posts_hero_slider(&$variables) {
  $variables['#attached']['library'][] = 'basecore/flexslider-main-init';
}

/**
 * Implements hook_preprocess_HOOK() for post hero card slider.
 */
function basecore_preprocess_views_view_list__mt_posts_hero_slider_card(&$variables) {
  $variables['#attached']['library'][] = 'basecore/flexslider-main-init';
 }

 /**
 * Implements hook_preprocess_HOOK() for post hero card slider alternative.
 */
 function basecore_preprocess_views_view_list__mt_posts_hero_slider_card_alternative(&$variables) {
  $variables['#attached']['library'][] = 'basecore/flexslider-main-init';
 }

/**
 * Implements hook_preprocess_HOOK() for pricing tables.
 */
function basecore_preprocess_views_view_list__mt_pricing_tables(&$variables) {
  $variables['#attached']['library'][] = 'basecore/view-pricing-tables';
}

/**
 * Implements hook_preprocess_HOOK() for pricing tables.
 */
function basecore_preprocess_views_view_list__mt_posts_promoted(&$variables) {
  $variables['#attached']['library'][] = 'basecore/horizontal-scroll-grid';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function basecore_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function basecore_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
    $form['keys']['#attributes']['placeholder'] = t('Search...');
  }
  if (isset($form['actions']['discard_changes'])) {
    $form['actions']['discard_changes']['#attributes']['class'][] = 'mt-button mt-button--outline';
  }
  if (isset($form['actions']['revert'])) {
    $form['actions']['revert']['#attributes']['class'][] = 'mt-button mt-button--outline';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function basecore_preprocess_views_view_table__commerce_cart_form(&$variables) {
  $variables['header']['edit_quantity']['content'] = t('Qty');
}

function basecore_preprocess_field(&$variables) {
  $element = $variables['element'];
  $variables['view_mode'] = $element['#view_mode']; //Expose node view_mode to field templates

  $rich_field_types = ['text_with_summary', 'text', 'text_long'];

  if (in_array($variables['field_type'], $rich_field_types, TRUE)) {
    $variables['attributes']['class'][] = 'mt-text-content';
  }
}

function basecore_preprocess_field__field_media_image(&$variables) {
  $variables['#attached']['library'][] = 'basecore/field-media-image';
}

function basecore_preprocess_field__entity_reference(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
}

function basecore_preprocess_field__node__field_mt_shw_tags(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  if (!empty($variables['element']['#view_mode']) && $variables['element']['#view_mode'] == 'full') {
    $variables['attributes']['class'][] = 'field--entity-reference-target-type-taxonomy-term--tags';
  }
}

function basecore_preprocess_field__node__field_mt_pst_category(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
}

function basecore_preprocess_field__node__field_mt_srv_tags(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  if (!empty($variables['element']['#view_mode']) && $variables['element']['#view_mode'] == 'full') {
    $variables['attributes']['class'][] = 'field--entity-reference-target-type-taxonomy-term--tags';
  }
}

function basecore_preprocess_field__node__field_mt_prd_tags(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  if (!empty($variables['element']['#view_mode']) && $variables['element']['#view_mode'] == 'full') {
    $variables['attributes']['class'][] = 'field--entity-reference-target-type-taxonomy-term--tags';
  }
}

function basecore_preprocess_field__node__field_tags(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  if (!empty($variables['element']['#view_mode']) && $variables['element']['#view_mode'] == 'full') {
      $variables['attributes']['class'][] = 'field--entity-reference-target-type-taxonomy-term--tags';
  }
}

function basecore_preprocess_field__node__field_mt_pst_tags(&$variables) {
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  if (!empty($variables['element']['#view_mode']) && $variables['element']['#view_mode'] == 'full') {
      $variables['attributes']['class'][] = 'field--entity-reference-target-type-taxonomy-term--tags';
  }
}

function basecore_preprocess_field__block_content__mt_tabs(&$variables){
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  $block_uuid = $variables['element']['#object']->toArray()['uuid'][0]['value'];
  $blocks = $variables['element']['#items']->referencedEntities();
  if (isset($blocks)) {
    foreach ($blocks as $key => $block) {
      $variables['items'][$key]['block_data']['label'] = $block->label();
      if (!empty($block_uuid)) {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block_uuid."-".$key);
      } else {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block->id());
      }
    }
  }
}

function basecore_preprocess_field__block_content__mt_collapsible(&$variables) {
  $block_uuid = $variables['element']['#object']->toArray()['uuid'][0]['value'];
  if (!empty($block_uuid)) {
    $variables['block_data']['id'] = Html::getUniqueId($block_uuid);
  }
  if (!empty($variables['element']['#object']->get('field_mt_cb_state')->first()) && $variables['element']['#object']->get('field_mt_cb_state')->first()->getValue()['value'] == "expanded") {
    $variables['field_mt_cb_state_value'] = "show";
    $variables['field_mt_cb_trigger_state_value'] = "";
  } else {
    $variables['field_mt_cb_state_value'] = "";
    $variables['field_mt_cb_trigger_state_value'] = "collapsed";
  }
  if (!empty($variables['element']['#object']->get('field_mt_cb_title')->first())) {
    $variables['field_mt_cb_title_value'] = $variables['element']['#object']->get('field_mt_cb_title')->first()->getValue()['value'];
    $variables['field_mt_cb_title_state_value'] = "collapsible-block__trigger-bar";
    $variables['field_mt_cb_trigger_icon_status'] = "trigger-icon-disabled";
  } else {
    $variables['field_mt_cb_title_value'] = "";
    $variables['field_mt_cb_title_state_value'] = "collapsible-block__trigger-icon";
    $variables['field_mt_cb_trigger_icon_status'] = "trigger-icon-enabled";
  }
  if (!empty($variables['element']['#object']->get('field_mt_cb_trigger_position')->first())) {
    $variables['field_mt_cb_trigger_position_value'] = $variables['element']['#object']->get('field_mt_cb_trigger_position')->first()->getValue()['value'];
  } else {
    $variables['field_mt_cb_trigger_position_value'] = "";
  }
  if (!empty($variables['element']['#object']->get('field_mt_cb_expand_icon')->first())) {
    $variables['field_mt_cb_expand_icon_value'] = $variables['element']['#object']->get('field_mt_cb_expand_icon')->first()->getValue()['value'];
  } else {
    $variables['field_mt_cb_expand_icon_value'] = "";
  }
  if (!empty($variables['element']['#object']->get('field_mt_cb_collapse_icon')->first())) {
    $variables['field_mt_cb_collapse_icon_value'] = $variables['element']['#object']->get('field_mt_cb_collapse_icon')->first()->getValue()['value'];
  } else {
    $variables['field_mt_cb_collapse_icon_value'] = "";
  }
}

function basecore_preprocess_field__block_content__mt_fancy_tabs(&$variables){
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  $block_uuid = $variables['element']['#object']->toArray()['uuid'][0]['value'];
  $blocks = $variables['element']['#items']->referencedEntities();
  if (isset($blocks)) {
    foreach ($blocks as $key => $block) {
      if (!empty($block_uuid)) {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block_uuid."-".$key);
      } else {
        $variables['items'][$key]['block_data']['id'] = Html::getUniqueId($block->id());
      }
    }
  }
}

function basecore_preprocess_field__block_content__field_mt_mdtb_tab(&$variables){
  $current_language_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['entity_reference_target_type'] = $variables['element']['#items']->getItemDefinition()->getSetting('target_type');
  $paragraph_uuid = $variables['element']['#object']->toArray()['uuid'][0]['value'];
  $paragraphs = $variables['element']['#items']->referencedEntities();
  if (isset($paragraphs)) {
    foreach ($paragraphs as $key => $paragraph_item) {
      if (!empty($paragraph_uuid)) {
        $variables['items'][$key]['tab_item_data']['id'] = Html::getUniqueId($paragraph_uuid."-".$key);
      } else {
        $variables['items'][$key]['tab_item_data']['id'] = Html::getUniqueId($paragraph_item->id());
      }
      if ($paragraph_item->hasTranslation($current_language_id)) {
        $video_field = $paragraph_item->getTranslation($current_language_id)->get('field_mt_media_video')->view();
        $media_image = $paragraph_item->getTranslation($current_language_id)->toArray()['field_mt_media_image'];
      } else {
        $media_image = $paragraph_item->toArray()['field_mt_media_image'];
        $video_field = $paragraph_item->get('field_mt_media_video')->view();
      }
      if (!empty($media_image[0])) {
        $file = File::load($media_image[0]['target_id']);
        $path = $file->getFileUri();
        $thumb_url = ImageStyle::load('mt_media_tab')->buildUrl($path);
        $variables['items'][$key]['media_image_styled_url'] = \Drupal::service('file_url_generator')->transformRelative($thumb_url);
      } else {
        $variables['items'][$key]['media_image_styled_url'] = "";
      }
      //get the video field from paragraph and generate render array with view()
      $video_field['#label_display'] = 'hidden'; //Hide the field label
      $video_field[0]['children']['#query']['autoplay'] = 0; //Set autoplay to false
      $variables['items'][$key]['video_field'] = $video_field;
    }
  }
  if (!empty($variables['element']['#object']->get('field_mt_mdtb_style')->first())) {
    $variables['tab_style'] = $variables['element']['#object']->get('field_mt_mdtb_style')->first()->getValue()['value'];
  }
}

function basecore_theme_suggestions_image_formatter_alter(array &$suggestions, array $variables) {
  $entity = $variables['item']->getEntity();
  $field_name = $variables['item']->getParent()->getName();
  if (isset($entity) && isset($field_name)) {
    $suggestions[] = 'image_formatter__' . $entity->getEntityTypeId() . '__' . $field_name;
    $suggestions[] = 'image_formatter__' . $entity->getEntityTypeId() . '__' . $entity->bundle() . '__' . $field_name;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function basecore_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    $bundle = $variables['elements']['content']['#block_content']->bundle();
    array_splice($suggestions, 1, 0, 'block__block_type__' . $bundle);
  }

  if (isset($variables['elements']['content']['#id']) && !empty($variables['elements']['#id'])) {
    $block_id = Block::load($variables['elements']['#id']);
    $block_plugin_id = $variables['elements']['#plugin_id'];
    $suggestions[] = 'block__' . $block_id->getRegion() . '__' . $block_plugin_id;
  }
}

function basecore_theme_suggestions_paragraph_alter(&$suggestions, $variables) {
  $paragraph = $variables['elements']['#paragraph'];
  $parent = $paragraph->getParentEntity();
  if ($parent) {
    $suggestions[] = 'paragraph__' . $parent->bundle() . '__' .  $paragraph->bundle();
  }
}

function basecore_theme_suggestions_layout_alter(array &$suggestions, array $variables) {
  $layout = $variables['content']['#theme'] ?? NULL;
  if (!$layout) {
    return;
  }

  // Try getting the node from render array
  $node = $variables['elements']['#node'] ?? NULL;

  // Fallback: get node from route
  if (!$node && \Drupal::routeMatch()->getRouteName() === 'entity.node.canonical') {
    $node = \Drupal::routeMatch()->getParameter('node');
  }

  if ($node instanceof \Drupal\node\NodeInterface) {
    $type = $node->bundle();
    $layout_machine = strtr($layout, '.', '__');

    // Suggestions in order of specificity
    $suggestions[] = 'layout__' . $type . '__' . $layout_machine;
  }
}
function basecore_preprocess_layout__mt_landing_page__layout__onecol(&$variables) {
  if (isset($variables['content']['#settings']['label']) && !empty($variables['content']['#settings']['label'])) {
    $safe_label = strtolower(\Drupal\Component\Utility\Html::cleanCssIdentifier($variables['content']['#settings']['label']));
    $variables['attributes']['class'][] = 'mt-layout--label--' . $safe_label;
  }
}
function basecore_preprocess_layout__mt_landing_page__layout__twocol_section(&$variables) {
  if (isset($variables['content']['#settings']['label']) && !empty($variables['content']['#settings']['label'])) {
    $safe_label = strtolower(\Drupal\Component\Utility\Html::cleanCssIdentifier($variables['content']['#settings']['label']));
    $variables['attributes']['class'][] = 'mt-layout--label--' . $safe_label;
  }
}
function basecore_preprocess_layout__mt_landing_page__layout__threecol_section(&$variables) {
  if (isset($variables['content']['#settings']['label']) && !empty($variables['content']['#settings']['label'])) {
    $safe_label = strtolower(\Drupal\Component\Utility\Html::cleanCssIdentifier($variables['content']['#settings']['label']));
    $variables['attributes']['class'][] = 'mt-layout--label--' . $safe_label;
  }
}
function basecore_preprocess_layout__mt_landing_page__layout__fourcol_section(&$variables) {
  if (isset($variables['content']['#settings']['label']) && !empty($variables['content']['#settings']['label'])) {
    $safe_label = strtolower(\Drupal\Component\Utility\Html::cleanCssIdentifier($variables['content']['#settings']['label']));
    $variables['attributes']['class'][] = 'mt-layout--label--' . $safe_label;
  }
}